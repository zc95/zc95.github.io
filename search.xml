<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[正则表达式]]></title>
      <url>/2017/12/20/RegularExpression/</url>
      <content type="html"><![CDATA[<h2 id="PART-1-正则表达式"><a href="#PART-1-正则表达式" class="headerlink" title="PART 1-正则表达式"></a>PART 1-正则表达式</h2><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><blockquote>
<p>^[0-9]+abc$</p>
</blockquote>
<ul>
<li><code>^</code> 为匹配输入字符串的开始位置</li>
<li><code>[0-9]+</code> 匹配单个数字，<code>+</code> 匹配一个或者多个</li>
<li><code>abc$</code> 匹配字母 <code>abc</code> 结尾</li>
<li><code>$</code> 为匹配输入字符串的结束位置</li>
</ul>
<p>匹配以数字开头，并以abc结尾的字符串：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> str = <span class="string">"123abc"</span>;</div><div class="line"><span class="keyword">var</span> patt1 = <span class="regexp">/^[0-9]+abc$/</span>;</div><div class="line"><span class="built_in">document</span>.write(str.match(patt1));</div><div class="line"></div><div class="line">==&gt; <span class="number">123</span>ABC</div></pre></td></tr></table></figure>
<h3 id="为什么使用正则表达式？"><a href="#为什么使用正则表达式？" class="headerlink" title="为什么使用正则表达式？"></a>为什么使用正则表达式？</h3><ul>
<li><p>测试字符串内的模式</p>
<p>例如，可以测试输入字符串，以查看字符串内是否出现电话号码或信用卡号码模式。这称为数据验证</p>
</li>
<li><p>替换文本</p>
<p>可以使用正则表达式来识别文档中的特定文本，完全删除该文本或者用其他文本替换它</p>
</li>
<li><p>基于模式匹配从字符串中提取子字符串</p>
<p>可以查找文档内或输入域内特定的文本</p>
</li>
</ul>
<h2 id="PART-2-正则字符简单介绍"><a href="#PART-2-正则字符简单介绍" class="headerlink" title="PART 2-正则字符简单介绍"></a>PART 2-正则字符简单介绍</h2><h3 id="基础字符含义"><a href="#基础字符含义" class="headerlink" title="基础字符含义"></a>基础字符含义</h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions" target="_blank" rel="external">MDN Regular Expressions</a></p>
<table>
<thead>
<tr>
<th style="text-align:center">字符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">\</td>
<td>转意，即通常在”\”后面的字符不按原来意义解释，如/b/匹配字符”b”，当b前面加了反斜杠后/\b/，转意为匹配一个单词的边界。</td>
</tr>
<tr>
<td style="text-align:center">^</td>
<td>匹配输入的开始<br><br> 例如，/^A/ 并不会匹配 “an A” 中的 ‘A’，但是会匹配 “An E” 中的 ‘A’。 当 ‘^’ 作为第一个字符出现在一个字符集合模式时，它将会有不同的含义。<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions#note" target="_blank" rel="external">补充字符集合</a>一节有详细介绍和示例。</td>
</tr>
<tr>
<td style="text-align:center">$</td>
<td>匹配输入的结束。 例如，/t$/ 并不会匹配 “eater” 中的 ‘t’，但是会匹配 “eat” 中的 ‘t’。</td>
</tr>
<tr>
<td style="text-align:center">*</td>
<td>匹配前面元字符0次或多次，<strong>/ba*/</strong> 将匹配b,ba,baa,baaa ，相当于{0, } <br><br> 例如，/bo*/会匹配 “A ghost boooooed” 中的 ‘booooo’ 和 “A bird warbled” 中的 ‘b’，但是在 “A goat grunted” 中将不会匹配任何东西。</td>
</tr>
<tr>
<td style="text-align:center">+</td>
<td>匹配前面元字符1次或多次，/ba+/将匹配ba,baa,baaa，相当于{1, } <br><br>例如，/a+/匹配了在 “candy” 中的 ‘a’，和在 “caaaaaaandy” 中所有的 ‘a’。</td>
</tr>
<tr>
<td style="text-align:center">?</td>
<td>匹配前面元字符0次或1次，相当于 {0,1}<br><br> 例如，/e?le?/ 匹配 “angel” 中的 ‘el’，和 “angle” 中的 ‘le’ 以及”oslo’ 中的’l’<br><br> 如果<strong>紧跟在任何量词 *、 +、? 或 {} 的后面</strong>，将会使量词变为<strong>非贪婪</strong>的（匹配尽量少的字符），和缺省使用的<strong>贪婪模式</strong>（匹配尽可能多的字符）正好相反。<br><br> 例如，对 “123abc” 应用 /\d+/ 将会返回 “123”，如果使用 /\d+?/,那么就只会匹配到 “1”。<br> 还可以运用于先行断言，如本表的 <code>x(?=y)</code> 和 <code>x(?!y)</code> 条目中所述。</td>
</tr>
<tr>
<td style="text-align:center">.</td>
<td>匹配除换行符之外的任何单个字符<br><br> 例如，/.n/将会匹配 “nay, an apple is on the tree” 中的 ‘an’ 和 ‘on’，但是不会匹配 ‘nay’。</td>
</tr>
<tr>
<td style="text-align:center">x&#124;y</td>
<td>匹配x或y</td>
</tr>
<tr>
<td style="text-align:center">{n}</td>
<td>精确匹配n次</td>
</tr>
<tr>
<td style="text-align:center">{n,}</td>
<td>匹配n次以上</td>
</tr>
<tr>
<td style="text-align:center">{n,m}</td>
<td>匹配n-m次</td>
</tr>
<tr>
<td style="text-align:center"><strong>[^xyz ]</strong></td>
<td>字符集(character set)，匹配这个集合中的任一一个字符(或元字符)</td>
</tr>
<tr>
<td style="text-align:center">[\b]</td>
<td>匹配一个退格符</td>
</tr>
<tr>
<td style="text-align:center">\b</td>
<td>匹配一个单词的边界</td>
</tr>
<tr>
<td style="text-align:center">\B</td>
<td>匹配一个非单词边界</td>
</tr>
<tr>
<td style="text-align:center">\cX</td>
<td>这儿，X是一个控制符，/\cM/匹配Ctrl-M</td>
</tr>
<tr>
<td style="text-align:center">\d</td>
<td>匹配一个数字，/\d/ = /[0-9]/</td>
</tr>
<tr>
<td style="text-align:center">\D</td>
<td>匹配一个非字数字符，/\D/ = /[ ^0-9]/</td>
</tr>
<tr>
<td style="text-align:center">\f</td>
<td>匹配一个换页符</td>
</tr>
<tr>
<td style="text-align:center">\n</td>
<td>匹配一个换行符</td>
</tr>
<tr>
<td style="text-align:center">\r</td>
<td>匹配一个回车符</td>
</tr>
<tr>
<td style="text-align:center">\s</td>
<td>匹配一个空白字符，包括\n,\r,\f,\t,\v等</td>
</tr>
<tr>
<td style="text-align:center">\S</td>
<td>匹配一个非空白字符，等于 /[ ^\n\f\r\t\v]/</td>
</tr>
<tr>
<td style="text-align:center">\t</td>
<td>匹配一个制表符</td>
</tr>
<tr>
<td style="text-align:center">\v</td>
<td>匹配一个重直制表符</td>
</tr>
<tr>
<td style="text-align:center">\w</td>
<td>匹配字母或数字或下划线，等于[a-zA-Z_0-9] ( 能不能匹配汉字要视你的操作系统和你的应用环境而定</td>
</tr>
<tr>
<td style="text-align:center">\W</td>
<td>匹配一个不可以组成单词的字符，如[\W]匹配”5.98”中的，等于 [ ^a-zA-Z0-9]</td>
</tr>
</tbody>
</table>
<h2 id="PART-3-使用正则表达式"><a href="#PART-3-使用正则表达式" class="headerlink" title="PART 3-使用正则表达式"></a>PART 3-使用正则表达式</h2><p>正则表达式可以被用于<code>RegExp</code>的<a href="https://developer.mozilla.org/zh-CN/docs/JavaScript/Reference/Global_Objects/RegExp/exec" target="_blank" rel="external"><code>exec</code></a>和<a href="https://developer.mozilla.org/zh-CN/docs/JavaScript/Reference/Global_Objects/RegExp/test" target="_blank" rel="external"><code>test</code></a>方法以及 <a href="https://developer.mozilla.org/zh-CN/docs/JavaScript/Reference/Global_Objects/String" target="_blank" rel="external"><code>String</code></a>的<a href="https://developer.mozilla.org/zh-CN/docs/JavaScript/Reference/Global_Objects/String/match" target="_blank" rel="external"><code>match</code></a>、<a href="https://developer.mozilla.org/zh-CN/docs/JavaScript/Reference/Global_Objects/String/replace" target="_blank" rel="external"><code>replace</code></a>、<a href="https://developer.mozilla.org/zh-CN/docs/JavaScript/Reference/Global_Objects/String/search" target="_blank" rel="external"><code>search</code></a>和<a href="https://developer.mozilla.org/zh-CN/docs/JavaScript/Reference/Global_Objects/String/split" target="_blank" rel="external"><code>split</code></a>方法。这些方法在<a href="https://developer.mozilla.org/zh-CN/docs/JavaScript/Reference" target="_blank" rel="external">JavaScript 手册</a>中有详细的解释。</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>exec</code></td>
<td>一个在字符串中执行查找匹配的RegExp方法，它返回一个数组（未匹配到则返回null）。</td>
</tr>
<tr>
<td><code>test</code></td>
<td>一个在字符串中测试是否匹配的RegExp方法，它返回true或false。</td>
</tr>
<tr>
<td><code>match</code></td>
<td>一个在字符串中执行查找匹配的String方法，它返回一个数组或者在未匹配到时返回null。</td>
</tr>
<tr>
<td><code>search</code></td>
<td>一个在字符串中测试匹配的String方法，它返回匹配到的位置索引，或者在失败时返回-1。</td>
</tr>
<tr>
<td><code>replace</code></td>
<td>一个在字符串中执行查找匹配的String方法，并且使用替换字符串替换掉匹配到的子字符串。</td>
</tr>
<tr>
<td><code>split</code></td>
<td>一个使用正则表达式或者一个固定字符串分隔一个字符串，并将分隔后的子字符串存储到数组中的String方法。</td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> 技术篇 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> html </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[loading加载等待框]]></title>
      <url>/2017/11/30/loading/</url>
      <content type="html"><![CDATA[<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul>
<li><a href="https://htmlpreview.github.io/?https://github.com/zc95/loading/blob/master/index.html" target="_blank" rel="external">demo地址</a></li>
<li><a href="https://github.com/zc95/loading" target="_blank" rel="external">github地址</a></li>
</ul>
<h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><ul>
<li>LoadShow();</li>
<li>LoadHide();</li>
</ul>
<h2 id="主要代码"><a href="#主要代码" class="headerlink" title="主要代码"></a>主要代码</h2><h3 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">LoadShow</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> str = <span class="string">"&lt;div id='loading_wrapper' class='loaders_wrapper'&gt;&lt;div class='loader'&gt;&lt;div class='loader-inner ball-spin-fade-loader'&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;"</span>;</div><div class="line">  $(<span class="string">"body"</span>).append(str);</div><div class="line">  $(<span class="string">"#loading_wrapper"</span>).show();</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">LoadHide</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  $(<span class="string">"#loading_wrapper"</span>).hide().remove();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*在线预览等待框*/</span></div><div class="line"><span class="selector-class">.loaders_wrapper</span> &#123;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">  <span class="attribute">background</span>: <span class="number">#000</span>;</div><div class="line">  <span class="attribute">filter</span>: <span class="built_in">alpha</span>(opacity=50);</div><div class="line">  <span class="attribute">opacity</span>: <span class="number">0.4</span>;</div><div class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</div><div class="line">  <span class="attribute">font-family</span>: <span class="string">'Source Sans Pro'</span>;</div><div class="line">  <span class="attribute">display</span>: none;</div><div class="line">  <span class="attribute">z-index</span>: <span class="number">99999</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.loaders_wrapper</span> <span class="selector-class">.loader</span> &#123;</div><div class="line">  <span class="attribute">max-width</span>: <span class="number">70px</span>;</div><div class="line">  <span class="attribute">height</span>: <span class="number">70px</span>;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</div><div class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</div><div class="line">  <span class="attribute">margin-left</span>: -<span class="number">35px</span>;</div><div class="line">  <span class="attribute">margin-top</span>: -<span class="number">35px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">@-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> ball-spin-fade-loader &#123;</div><div class="line">  50% &#123;</div><div class="line">    <span class="attribute">opacity</span>: <span class="number">0.3</span>;</div><div class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">scale</span>(0.4);</div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(0.4);</div><div class="line">  &#125;</div><div class="line">  100% &#123;</div><div class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</div><div class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">scale</span>(1);</div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(1);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">@<span class="keyword">keyframes</span> ball-spin-fade-loader &#123;</div><div class="line">  50% &#123;</div><div class="line">    <span class="attribute">opacity</span>: <span class="number">0.3</span>;</div><div class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">scale</span>(0.4);</div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(0.4);</div><div class="line">  &#125;</div><div class="line">  100% &#123;</div><div class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</div><div class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">scale</span>(1);</div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(1);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.ball-spin-fade-loader</span> &#123;</div><div class="line">  <span class="attribute">position</span>: relative;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.ball-spin-fade-loader</span> &gt; <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(1)</span> &#123;</div><div class="line">  <span class="attribute">top</span>: <span class="number">25px</span>;</div><div class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">-webkit-animation</span>: ball-spin-fade-loader <span class="number">1s</span> <span class="number">0s</span> infinite linear;</div><div class="line">  <span class="attribute">animation</span>: ball-spin-fade-loader <span class="number">1s</span> <span class="number">0s</span> infinite linear;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.ball-spin-fade-loader</span> &gt; <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(2)</span> &#123;</div><div class="line">  <span class="attribute">top</span>: <span class="number">17.04545px</span>;</div><div class="line">  <span class="attribute">left</span>: <span class="number">17.04545px</span>;</div><div class="line">  <span class="attribute">-webkit-animation</span>: ball-spin-fade-loader <span class="number">1s</span> <span class="number">0.12s</span> infinite linear;</div><div class="line">  <span class="attribute">animation</span>: ball-spin-fade-loader <span class="number">1s</span> <span class="number">0.12s</span> infinite linear;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.ball-spin-fade-loader</span> &gt; <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(3)</span> &#123;</div><div class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">left</span>: <span class="number">25px</span>;</div><div class="line">  <span class="attribute">-webkit-animation</span>: ball-spin-fade-loader <span class="number">1s</span> <span class="number">0.24s</span> infinite linear;</div><div class="line">  <span class="attribute">animation</span>: ball-spin-fade-loader <span class="number">1s</span> <span class="number">0.24s</span> infinite linear;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.ball-spin-fade-loader</span> &gt; <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(4)</span> &#123;</div><div class="line">  <span class="attribute">top</span>: -<span class="number">17.04545px</span>;</div><div class="line">  <span class="attribute">left</span>: <span class="number">17.04545px</span>;</div><div class="line">  <span class="attribute">-webkit-animation</span>: ball-spin-fade-loader <span class="number">1s</span> <span class="number">0.36s</span> infinite linear;</div><div class="line">  <span class="attribute">animation</span>: ball-spin-fade-loader <span class="number">1s</span> <span class="number">0.36s</span> infinite linear;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.ball-spin-fade-loader</span> &gt; <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(5)</span> &#123;</div><div class="line">  <span class="attribute">top</span>: -<span class="number">25px</span>;</div><div class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">-webkit-animation</span>: ball-spin-fade-loader <span class="number">1s</span> <span class="number">0.48s</span> infinite linear;</div><div class="line">  <span class="attribute">animation</span>: ball-spin-fade-loader <span class="number">1s</span> <span class="number">0.48s</span> infinite linear;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.ball-spin-fade-loader</span> &gt; <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(6)</span> &#123;</div><div class="line">  <span class="attribute">top</span>: -<span class="number">17.04545px</span>;</div><div class="line">  <span class="attribute">left</span>: -<span class="number">17.04545px</span>;</div><div class="line">  <span class="attribute">-webkit-animation</span>: ball-spin-fade-loader <span class="number">1s</span> <span class="number">0.6s</span> infinite linear;</div><div class="line">  <span class="attribute">animation</span>: ball-spin-fade-loader <span class="number">1s</span> <span class="number">0.6s</span> infinite linear;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.ball-spin-fade-loader</span> &gt; <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(7)</span> &#123;</div><div class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">left</span>: -<span class="number">25px</span>;</div><div class="line">  <span class="attribute">-webkit-animation</span>: ball-spin-fade-loader <span class="number">1s</span> <span class="number">0.72s</span> infinite linear;</div><div class="line">  <span class="attribute">animation</span>: ball-spin-fade-loader <span class="number">1s</span> <span class="number">0.72s</span> infinite linear;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.ball-spin-fade-loader</span> &gt; <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(8)</span> &#123;</div><div class="line">  <span class="attribute">top</span>: <span class="number">17.04545px</span>;</div><div class="line">  <span class="attribute">left</span>: -<span class="number">17.04545px</span>;</div><div class="line">  <span class="attribute">-webkit-animation</span>: ball-spin-fade-loader <span class="number">1s</span> <span class="number">0.84s</span> infinite linear;</div><div class="line">  <span class="attribute">animation</span>: ball-spin-fade-loader <span class="number">1s</span> <span class="number">0.84s</span> infinite linear;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.ball-spin-fade-loader</span> &gt; <span class="selector-tag">div</span> &#123;</div><div class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">15px</span>;</div><div class="line">  <span class="attribute">height</span>: <span class="number">15px</span>;</div><div class="line">  <span class="attribute">border-radius</span>: <span class="number">100%</span><span class="meta">!important</span>;</div><div class="line">  <span class="attribute">margin</span>: <span class="number">2px</span>;</div><div class="line">  <span class="attribute">-webkit-animation-fill-mode</span>: both;</div><div class="line">  <span class="attribute">animation-fill-mode</span>: both;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">&#125;</div><div class="line"><span class="comment">/*在线预览等待框*/</span></div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> demo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> html </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用最简单的代码实现点击查看大图]]></title>
      <url>/2017/11/29/enlargeImg/</url>
      <content type="html"><![CDATA[<p>今天做了个点击查看大图的功能，只需要给img加一个class，不用写额外的html代码</p>
<p style="text-align:center;"><br><img style="box-shadow:1px 1px 10px #888888;" src="/images/myImages/enlargeImg.png" width="90%;"><br></p>

<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul>
<li><a href="https://htmlpreview.github.io/?https://github.com/zc95/enlargeImg/blob/master/index.html" target="_blank" rel="external">demo地址</a></li>
<li><a href="https://github.com/zc95/enlargeImg" target="_blank" rel="external">github地址</a></li>
</ul>
<h2 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h2><h3 id="html部分"><a href="#html部分" class="headerlink" title="html部分"></a>html部分</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"enlargeImg"</span> <span class="attr">width</span>=<span class="string">"80"</span> <span class="attr">src</span>=<span class="string">"https://zc95.github.io/images/avatar.png"</span></span></div><div class="line"><span class="tag"><span class="attr">title</span>=<span class="string">"点击查看大图"</span> /&gt;</span></div></pre></td></tr></table></figure>
<p>重点：</p>
<ul>
<li>img标签</li>
<li>class=”enlargeImg”</li>
<li>限制图片宽度或高度为”小图片”，width=”80”</li>
<li>src有值</li>
<li>title=”点击查看大图”</li>
</ul>
<h3 id="css部分"><a href="#css部分" class="headerlink" title="css部分"></a>css部分</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.enlargeImg_wrapper</span> &#123;</div><div class="line">  <span class="attribute">display</span>: none;</div><div class="line">  <span class="attribute">position</span>: fixed;</div><div class="line">  <span class="attribute">z-index</span>: <span class="number">999</span>;</div><div class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">background-repeat</span>: no-repeat;</div><div class="line">  <span class="attribute">background-attachment</span>: fixed;</div><div class="line">  <span class="attribute">background-position</span>: center;</div><div class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(52, 52, 52, 0.8);</div><div class="line">  <span class="attribute">background-size</span>: <span class="number">50%</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">img</span><span class="selector-pseudo">:hover</span>,</div><div class="line"><span class="selector-class">.enlargeImg_wrapper</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">  <span class="attribute">cursor</span>: pointer;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>重点：</p>
<ul>
<li>半透明遮罩层 background-color: rgba(52, 52, 52, 0.8);</li>
<li>水平垂直居中 background-position: center;</li>
<li>放大后的图片大小 background-size: 50%;</li>
<li>如果受页面中别的定位元素的z-index影响，改z-index的值就行</li>
</ul>
<h3 id="js部分"><a href="#js部分" class="headerlink" title="js部分"></a>js部分</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  enlargeImg();</div><div class="line">&#125;)</div><div class="line"><span class="comment">//查看大图</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">enlargeImg</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  $(<span class="string">".enlargeImg"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    $(<span class="keyword">this</span>).after(<span class="string">"&lt;div onclick='closeImg()' class='enlargeImg_wrapper'&gt;&lt;/div&gt;"</span>);</div><div class="line">    <span class="keyword">var</span> imgSrc = $(<span class="keyword">this</span>).attr(<span class="string">'src'</span>);</div><div class="line">    $(<span class="string">".enlargeImg_wrapper"</span>).css(<span class="string">"background-image"</span>, <span class="string">"url("</span> + imgSrc + <span class="string">")"</span>);</div><div class="line">    $(<span class="string">'.enlargeImg_wrapper'</span>).fadeIn(<span class="number">200</span>);</div><div class="line">  &#125;)</div><div class="line">&#125;</div><div class="line"><span class="comment">//关闭并移除图层</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">closeImg</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  $(<span class="string">'.enlargeImg_wrapper'</span>).fadeOut(<span class="number">200</span>).remove();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>重点：</p>
<ul>
<li>点击class为 <code>enlargeImg</code> 的图片时获取它的路径，var imgSrc = $(this).attr(‘src’);</li>
<li>创建遮罩层，$(this).after(“<div onclick="closeImg()" class="enlargeImg_wrapper"></div>“);</li>
<li>赋值给 <code>enlargeImg_wrapper</code> ，$(“.enlargeImg_wrapper”).css(“background-image”, “url(“ + imgSrc + “)”);</li>
<li>关闭遮罩层时移除遮罩层，$(‘.enlargeImg_wrapper’).fadeOut(200).remove();</li>
</ul>
]]></content>
      
        <categories>
            
            <category> demo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> html </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[更改hosts文件来更好地使用github]]></title>
      <url>/2017/11/28/hostsChange/</url>
      <content type="html"><![CDATA[<p>最近可能是网不太好，hexo d的时候总是提交不了，很苦恼，试了n多种方法。。。</p>
<h2 id="hexo-d时报错"><a href="#hexo-d时报错" class="headerlink" title="hexo d时报错"></a>hexo d时报错</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">fatal: unable to access<span class="string">'https://github.com/zc95/zc95.github.io.git/ '</span>: Could not</div><div class="line">resolve host: github.com</div><div class="line">FATAL Something<span class="string">'s wrong.Maybe you can find the solution here:http:hexo.io/docs/troubleshooting.html</span></div><div class="line"><span class="string">...</span></div></pre></td></tr></table></figure>
<h2 id="命令行终端-ping-github-com"><a href="#命令行终端-ping-github-com" class="headerlink" title="命令行终端 ping github.com"></a>命令行终端 ping github.com</h2><p>打开命令行终端，输入 <code>ping github.com</code> 并回车</p>
<blockquote>
<p>ping github.com</p>
</blockquote>
<p>如果像下面这样ping不出，就继续往下看吧</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ping github.com</div><div class="line">PING github.com (192.30.255.113): 56 data bytes</div><div class="line">Request timeout</div><div class="line">Request timeout <span class="keyword">for</span> icmp_seq 0</div><div class="line">Request timeout <span class="keyword">for</span> icmp_seq 1</div><div class="line">Request timeout <span class="keyword">for</span> icmp_seq 2</div><div class="line">Request timeout <span class="keyword">for</span> icmp_seq 3</div><div class="line">Request timeout <span class="keyword">for</span> icmp_seq 4</div><div class="line">Request timeout <span class="keyword">for</span> icmp_seq 5</div><div class="line">...</div></pre></td></tr></table></figure>
<h2 id="Ping-github-com"><a href="#Ping-github-com" class="headerlink" title="Ping github.com"></a>Ping github.com</h2><ol>
<li>打开链接 <a href="http://ping.chinaz.com" target="_blank" rel="external">http://ping.chinaz.com</a> 输入 <code>github.com</code> ,点击Ping检测</li>
<li>选择一条TTL值最小的ip地址，例如：<code>192.30.255.113</code> </li>
</ol>
<h2 id="修改hosts"><a href="#修改hosts" class="headerlink" title="修改hosts"></a>修改hosts</h2><ol>
<li>点击Finder - 前往 - 前往文件夹… - 输入 <code>/etc/hosts</code> 点击前往</li>
<li>找到hosts文件，修改hosts文件需要管理员权限，所以不能单纯修改，先按住hosts文件拖到桌面，双击打开桌面上的hosts文件</li>
<li>在 <code>127.0.0.1 localhost</code> 下面另起一行输入 <code>192.30.255.113 github.com</code> ，保存并退出</li>
<li>将桌面的hosts文件拖回直原来的位置，他会提示你 <strong>修改”etc”需要管理员密码</strong> ，点击”鉴定”，会提示你是否覆盖原文件，点击”是”，输入密码或指纹，ok了</li>
<li>再次在命令行终端  <code>ping github.com</code>  就能看到ping成功了</li>
<li>可以愉快的deploy了</li>
</ol>
<hr>
<h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h3 id="什么是hosts？"><a href="#什么是hosts？" class="headerlink" title="什么是hosts？"></a>什么是hosts？</h3><blockquote>
<p>Hosts是一个没有扩展名的系统文件，可以用记事本等工具打开，其作用就是将一些常用的网址<a href="https://baike.baidu.com/item/%E5%9F%9F%E5%90%8D" target="_blank" rel="external">域名</a>与其对应的<a href="https://baike.baidu.com/item/IP%E5%9C%B0%E5%9D%80" target="_blank" rel="external">IP地址</a>建立一个关联“数据库”，当用户在浏览器中输入一个需要登录的网址时，系统会首先自动从<a href="https://baike.baidu.com/item/Hosts%E6%96%87%E4%BB%B6" target="_blank" rel="external">Hosts文件</a>中寻找对应的<a href="https://baike.baidu.com/item/IP%E5%9C%B0%E5%9D%80" target="_blank" rel="external">IP地址</a>，一旦找到，系统会立即打开对应网页，如果没有找到，则系统会再将网址提交DNS<a href="https://baike.baidu.com/item/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90" target="_blank" rel="external">域名解析</a>服务器进行IP地址的解析。</p>
</blockquote>
<h3 id="每次改完配置需要重启机器吗？"><a href="#每次改完配置需要重启机器吗？" class="headerlink" title="每次改完配置需要重启机器吗？"></a>每次改完配置需要重启机器吗？</h3><blockquote>
<p>不需要，它实质上是个文本文件，当计算机需要解析地址时，会首先检查此文件，读取后再确定是本地解析还是要发送到DNS服务器来解析。<br>改后，只要再上网，就会生效。</p>
</blockquote>
<h3 id="hosts文件在哪里"><a href="#hosts文件在哪里" class="headerlink" title="hosts文件在哪里?"></a>hosts文件在哪里?</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="string">Linux:</span><span class="regexp">/etc/</span>hosts</div><div class="line">Mac OS <span class="string">X:</span><span class="regexp">/etc/</span>hosts</div><div class="line"><span class="string">Android:</span><span class="regexp">/etc/</span>hosts</div><div class="line"><span class="string">Windows:</span><span class="string">C:</span><span class="regexp">/windows/</span>System32<span class="regexp">/drivers/</span>etc/hosts</div></pre></td></tr></table></figure>
<h3 id="hosts文件规则"><a href="#hosts文件规则" class="headerlink" title="hosts文件规则?"></a>hosts文件规则?</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#ip</span>地址           域名</div><div class="line">127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span>	     <span class="selector-tag">localhost</span></div><div class="line">192<span class="selector-class">.30</span><span class="selector-class">.255</span><span class="selector-class">.113</span>   <span class="selector-tag">github</span><span class="selector-class">.com</span></div><div class="line">255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.255</span>	 <span class="selector-tag">broadcasthost</span></div><div class="line"><span class="selector-pseudo">::1</span>              <span class="selector-tag">localhost</span></div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 技术篇 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> html </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于float清除浮动和inline-block出现空隙的问题]]></title>
      <url>/2017/11/26/floatAndInlineBlock/</url>
      <content type="html"><![CDATA[<p>最近在写项目的时候手写了一个简单选项卡，遇到这类布局，最常见、最快速的布局方式就是display:inline-block;和float:left; </p>
<p></p><p style="text-align:center;"><br><img style="box-shadow:1px 1px 10px #888888;" src="/images/myImages/inlineBlockKX.png" width="90%;"><br></p><br>但我们都知道 <code>display:inline-block</code> 布局会出现空隙的问题，<code>float:left</code>  又要清除浮动，本文就这两个问题整理出解决方案。<p></p>
<h2 id="display-inline-block去掉空隙"><a href="#display-inline-block去掉空隙" class="headerlink" title="display:inline-block去掉空隙"></a>display:inline-block去掉空隙</h2><h3 id="移除标签间的空格"><a href="#移除标签间的空格" class="headerlink" title="移除标签间的空格"></a>移除标签间的空格</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"tab-wrapper"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"tab-item active"</span>&gt;</span>项目一<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"tab-item"</span>&gt;</span>项目二<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"tab-item"</span>&gt;</span>项目三<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"tab-item"</span>&gt;</span>项目四<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<p>这个方法是我最初学html时知道的方法，当时觉得挺方便的，现在工作了觉得这个方法好蠢😂，一个代码格式化就能毁了它，这样不易维护的代码太脆弱了；</p>
<h3 id="去掉闭合标签"><a href="#去掉闭合标签" class="headerlink" title="去掉闭合标签"></a>去掉闭合标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"tab-wrapper"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"tab-item active"</span>&gt;</span>项目一</div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"tab-item"</span>&gt;</span>项目二</div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"tab-item"</span>&gt;</span>项目三</div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"tab-item"</span>&gt;</span>项目四</div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<p>这个方法算是种好方法，最后一个li的闭合标签可有可无，也能很好的解决空隙问题，但依然还是代码不易维护的问题。</p>
<h3 id="font-size-0"><a href="#font-size-0" class="headerlink" title="font-size:0;"></a>font-size:0;</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"tab-wrapper"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"tab-item active"</span>&gt;</span>项目一<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"tab-item"</span>&gt;</span>项目二<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"tab-item"</span>&gt;</span>项目三<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"tab-item"</span>&gt;</span>项目四<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.tab-wrapper</span>&#123;</div><div class="line">  font-size:0; //父容器font-size为0</div><div class="line">  -webkit-text-size-adjust:none; //Chrome有最小字体大小限制，考虑到兼容性需要取消字体大小限制</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.tab-wrapper</span> <span class="selector-class">.tab-item</span>&#123;</div><div class="line">  <span class="attribute">display</span>:inline-block;</div><div class="line">  font-size:13px; //这里比较重要，因为子元素会继承父元素的字体大小，这里要恢复正常font-size</div><div class="line">  <span class="selector-tag">padding</span><span class="selector-pseudo">:5px</span> 12<span class="selector-tag">px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这个方法方法好理解，比较主流的解决方案；</p>
<h2 id="float-清除浮动"><a href="#float-清除浮动" class="headerlink" title="float 清除浮动"></a>float 清除浮动</h2><h3 id="空标签"><a href="#空标签" class="headerlink" title="空标签 "></a>空标签 <div style="clear:both;"></div></h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;div class="box-wrapper"&gt;</div><div class="line">    &lt;div class="box"&gt;&lt;/div&gt;</div><div class="line">    &lt;div class="box"&gt;&lt;/div&gt;</div><div class="line">    &lt;div class="box"&gt;&lt;/div&gt;</div><div class="line">    &lt;div style="clear:both;"&gt;&lt;/div&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
<h3 id="最佳方法"><a href="#最佳方法" class="headerlink" title="最佳方法"></a>最佳方法</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">// 全浏览器通用的clearfix方案【推荐】</div><div class="line">// 引入了zoom以支持IE6/7</div><div class="line">// 同时加入:before以解决现代浏览器上边距折叠的问题</div><div class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span>,</div><div class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</div><div class="line">    <span class="attribute">display</span>: table;</div><div class="line">    <span class="attribute">content</span>: <span class="string">" "</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</div><div class="line">    <span class="attribute">clear</span>: both;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.clearfix</span>&#123;</div><div class="line">    *zoom: 1;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 技术篇 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> html </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[基于 GitHub Issues 的评论系统：gitment]]></title>
      <url>/2017/11/23/gitment/</url>
      <content type="html"><![CDATA[<h2 id="如何为hexo博客添加评论功能"><a href="#如何为hexo博客添加评论功能" class="headerlink" title="如何为hexo博客添加评论功能"></a>如何为<a href="https://zc95.github.io/2017/10/20/hexoBlog/">hexo</a>博客添加评论功能</h2><p>多说、友言、Disqus、livere(来比力)、gitment、畅言、valine基本都可以实现，但有些已经关闭，有些需要翻墙</p>
<p>本文讲的是一款基于 GitHub Issues 的评论系统：gitment 。支持在前端直接引入，不需要任何后端代码。可以在页面进行登录、查看、评论、点赞等操作，同时有完整的 Markdown语法 和代码高亮支持。尤为适合各种基于 GitHub Pages 的静态博客或项目页面。</p>
<hr>
<h2 id="gitment"><a href="#gitment" class="headerlink" title="gitment"></a>gitment</h2><h3 id="PC端"><a href="#PC端" class="headerlink" title="PC端"></a>PC端</h3><p style="text-align:center;"><br><img style="box-shadow:1px 1px 10px #888888;" src="/images/myImages/gitmentPC.png" width="90%;"><br></p>        



<hr>
<h3 id="移动端"><a href="#移动端" class="headerlink" title="移动端"></a>移动端</h3><p style="text-align:center;"><br><img style="box-shadow:1px 1px 10px #888888;" src="/images/myImages/gitmentYD.png" width="90%;"><br></p>

<hr>
<h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><p>打开博客主题文件夹下的 <code>_config.yml</code> 文件，以我的为例：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="attr">comment:</span></div><div class="line"><span class="attr">  type:</span> <span class="string">gitment</span>  <span class="comment"># 启用哪种评论系统</span></div><div class="line"><span class="attr">  gitment:</span></div><div class="line"><span class="attr">    githubID:</span> <span class="string">zc95</span>  <span class="comment"># 你的GitHub名称</span></div><div class="line"><span class="attr">    repo:</span> <span class="string">zc95.github.io</span>  <span class="comment"># 你的GitHub名称.github.io</span></div><div class="line"><span class="attr">    ClientID:</span> <span class="string">*********</span></div><div class="line"><span class="attr">    ClientSecret:</span> <span class="string">*********</span></div><div class="line"><span class="attr">    lazy:</span> <span class="literal">false</span>   <span class="comment"># 这个我也不清楚 大概是懒加载的意思吧</span></div></pre></td></tr></table></figure>
<p><code>githubID</code> 和 <code>repo</code> 都有了，就剩 <code>ClientID</code> 和 <code>ClientSecret</code> 了</p>
<hr>
<h2 id="注册OAuth-Application"><a href="#注册OAuth-Application" class="headerlink" title="注册OAuth Application"></a>注册OAuth Application</h2><p>通过地址<a href="https://github.com/settings/applications/new" target="_blank" rel="external">OAuth Application注册传送门</a>申请配置，注册一个新的 OAuth Application，其他内容可以随意填写，但要确保填入正确的 callback URL（一般是评论页面对应的域名，如 <a href="https://zc95.github.io">https://zc95.github.io</a>）</p>
<p style="text-align:center;"><br><img style="box-shadow:1px 1px 10px #888888;" src="/images/myImages/OAuthApplication.png" width="90%;"><br></p>

<hr>
<h2 id="获取ClientID与ClientSecret"><a href="#获取ClientID与ClientSecret" class="headerlink" title="获取ClientID与ClientSecret"></a>获取ClientID与ClientSecret</h2><p style="text-align:center;"><br><img style="box-shadow:1px 1px 10px #888888;" src="/images/myImages/OAuthApplicationId.png" width="90%;"><br></p>


<hr>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul>
<li>优点<ul>
<li>界面​简洁</li>
<li>与github绑定，方便注册，不用依赖脚本或插件</li>
<li>评论会出现在github项目中的Issues里，方便管理</li>
<li>支持Markdown全部语法和html标签（这个很厉害）</li>
</ul>
</li>
<li>缺点<ul>
<li>​每篇文章都需要手动点击initialize comments按钮来初始化评论，否则不能评论；</li>
<li>不支持图片（可以尝试用markdown或者img标签来实现）和表情（emoji可以用）</li>
<li>只能支持github登陆</li>
</ul>
</li>
</ul>
<hr>
<h2 id="最后更新"><a href="#最后更新" class="headerlink" title="最后更新"></a>最后更新</h2><p>最后还是选择了<a href="https://livere.com" target="_blank" rel="external">livere 来必力</a>，注册登陆需要翻墙（或许因为我网不好。。），一旦注册之后评论之类的就不需翻墙了，支持QQ、微信、微博、百度等登陆方式，本页拉到最底下就是来必力了，体验还是可以的。</p>
]]></content>
      
        <categories>
            
            <category> 技术篇 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> gitment </tag>
            
            <tag> Issues </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我的收藏]]></title>
      <url>/2017/11/21/Collection/</url>
      <content type="html"><![CDATA[<h2 id="我的博客"><a href="#我的博客" class="headerlink" title="我的博客"></a>我的博客</h2><h3 id="https-zc95-github-io"><a href="#https-zc95-github-io" class="headerlink" title="https://zc95.github.io"></a><a href="https://zc95.github.io">https://zc95.github.io</a></h3><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><h3 id="jsrun在线代码编辑"><a href="#jsrun在线代码编辑" class="headerlink" title="jsrun在线代码编辑"></a><a href="http://jsrun.net" target="_blank" rel="external">jsrun在线代码编辑</a></h3><h3 id="tinypng压缩图片"><a href="#tinypng压缩图片" class="headerlink" title="tinypng压缩图片"></a><a href="https://tinypng.com" target="_blank" rel="external">tinypng压缩图片</a></h3><h3 id="Google翻译"><a href="#Google翻译" class="headerlink" title="Google翻译"></a><a href="https://translate.google.cn" target="_blank" rel="external">Google翻译</a></h3><h3 id="msdn-itellyou"><a href="#msdn-itellyou" class="headerlink" title="msdn.itellyou"></a><a href="https://msdn.itellyou.cn" target="_blank" rel="external">msdn.itellyou</a></h3><h3 id="MDN文档"><a href="#MDN文档" class="headerlink" title="MDN文档"></a><a href="https://developer.mozilla.org/zh-CN/" target="_blank" rel="external">MDN文档</a></h3><h2 id="前端插件-amp-框架"><a href="#前端插件-amp-框架" class="headerlink" title="前端插件&amp;框架"></a>前端插件&amp;框架</h2><h3 id="echarts"><a href="#echarts" class="headerlink" title="echarts"></a><a href="hhttp://www.echartsjs.com" target="_blank" rel="external">echarts</a></h3><h3 id="layui"><a href="#layui" class="headerlink" title="layui"></a><a href="http://www.layui.com" target="_blank" rel="external">layui</a></h3><h3 id="阿里巴巴矢量图标图"><a href="#阿里巴巴矢量图标图" class="headerlink" title="阿里巴巴矢量图标图"></a><a href="http://www.iconfont.cn" target="_blank" rel="external">阿里巴巴矢量图标图</a></h3><h2 id="学习网站"><a href="#学习网站" class="headerlink" title="学习网站"></a>学习网站</h2><h3 id="freecodecamp"><a href="#freecodecamp" class="headerlink" title="freecodecamp"></a><a href="https://www.freecodecamp.cn" target="_blank" rel="external">freecodecamp</a></h3><h3 id="慕课网"><a href="#慕课网" class="headerlink" title="慕课网"></a><a href="https://www.imooc.com" target="_blank" rel="external">慕课网</a></h3><h3 id="前端菜鸟教程"><a href="#前端菜鸟教程" class="headerlink" title="前端菜鸟教程"></a><a href="http://www.runoob.com" target="_blank" rel="external">前端菜鸟教程</a></h3>]]></content>
      
        <categories>
            
            <category> 汇总篇 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 收藏 </tag>
            
            <tag> 前端必备 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[数组复习]]></title>
      <url>/2017/11/21/arrayReview/</url>
      <content type="html"><![CDATA[<h2 id="检测数组"><a href="#检测数组" class="headerlink" title="检测数组"></a>检测数组</h2><h3 id="typeof"><a href="#typeof" class="headerlink" title="typeof"></a>typeof</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> ary = [<span class="number">1</span>,<span class="number">23</span>,<span class="number">4</span>];</div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> ary); <span class="comment">//输出结果是Object</span></div></pre></td></tr></table></figure>
<h3 id="instanceof"><a href="#instanceof" class="headerlink" title="instanceof"></a>instanceof</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> ary = [<span class="number">1</span>,<span class="number">23</span>,<span class="number">4</span>];</div><div class="line"><span class="built_in">console</span>.log(ary <span class="keyword">instanceof</span> <span class="built_in">Array</span>)<span class="comment">//true;</span></div></pre></td></tr></table></figure>
<h3 id="原型链方法"><a href="#原型链方法" class="headerlink" title="原型链方法"></a>原型链方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> ary = [<span class="number">1</span>,<span class="number">23</span>,<span class="number">4</span>];</div><div class="line"><span class="built_in">console</span>.log(ary.__proto__.constructor==<span class="built_in">Array</span>);<span class="comment">//true</span></div><div class="line"><span class="built_in">console</span>.log(ary.constructor==<span class="built_in">Array</span>)<span class="comment">//true 这两段代码是一样的</span></div></pre></td></tr></table></figure>
<blockquote>
<p>以上三种方法都不太好，<code>instanceof</code> 和 <code>constructor</code> 判断的变量，必须在当前页面声明的，比如，一个页面（父页面）有一个框架，框架中引用了一个页面（子页面），在子页面中声明了一个arr，并将其赋值给父页面的一个变量，这时判断该变量，Array == object.constructor;会返回false；</p>
</blockquote>
<h3 id="正确方法"><a href="#正确方法" class="headerlink" title="正确方法"></a>正确方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> ary = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isArray</span>(<span class="params">e</span>)</span>&#123;</div><div class="line"><span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(e)==<span class="string">'[object Array]'</span>;</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(isArray(ary));</div></pre></td></tr></table></figure>
<h3 id="自己封装的基本数据类型验证"><a href="#自己封装的基本数据类型验证" class="headerlink" title="自己封装的基本数据类型验证"></a>自己封装的基本数据类型验证</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> type = &#123;</div><div class="line">  isObj: <span class="function"><span class="keyword">function</span>(<span class="params">o</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o) == <span class="string">"[object Object]"</span>;</div><div class="line">  &#125;,</div><div class="line">  isArray: <span class="function"><span class="keyword">function</span>(<span class="params">o</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o) == <span class="string">"[object Array]"</span>;</div><div class="line">  &#125;,</div><div class="line">  isNull: <span class="function"><span class="keyword">function</span>(<span class="params">o</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o) == <span class="string">"[object Null]"</span>;</div><div class="line">  &#125;,</div><div class="line">  isUndefined: <span class="function"><span class="keyword">function</span>(<span class="params">o</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o) == <span class="string">"[object Undefined]"</span>;</div><div class="line">  &#125;,</div><div class="line">  isBoolean: <span class="function"><span class="keyword">function</span>(<span class="params">o</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o) == <span class="string">"[object Boolean]"</span>;</div><div class="line">  &#125;,</div><div class="line">  isString: <span class="function"><span class="keyword">function</span>(<span class="params">o</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o) == <span class="string">"[object String]"</span>;</div><div class="line">  &#125;,</div><div class="line">  isNumber: <span class="function"><span class="keyword">function</span>(<span class="params">o</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o) == <span class="string">"[object Number]"</span>;</div><div class="line">  &#125;,</div><div class="line">  isDocument: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o) == <span class="string">"[object Document]"</span> || <span class="string">"[object HTMLDocument]"</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">------------------------------</div><div class="line">&gt;<span class="built_in">console</span>.log(type.isArray([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]));</div><div class="line">&gt;<span class="literal">true</span></div></pre></td></tr></table></figure>
<h2 id="push-和pop"><a href="#push-和pop" class="headerlink" title="push()和pop()"></a>push()和pop()</h2><ul>
<li><code>push()</code> 向数组末尾添加任意个项并返回新数组的长度</li>
<li><code>pop()</code> 从数组末尾移除最后一项，减少数组的length值 （返回的是移除的项）</li>
</ul>
<h2 id="shift-和unshift"><a href="#shift-和unshift" class="headerlink" title="shift()和unshift()"></a>shift()和unshift()</h2><ul>
<li><p><code>unshift()</code> 向数组前端添加任意个项并返回新数组的长度</p>
</li>
<li><p><code>shift()</code> 从数组前端移除第一项，减少数组的length值 （返回的是移除的项）</p>
</li>
</ul>
<h2 id="重排序-sort-reverse"><a href="#重排序-sort-reverse" class="headerlink" title="重排序 sort() reverse()"></a>重排序 sort() reverse()</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">compare</span>(<span class="params">a,b</span>)</span>&#123;</div><div class="line">  <span class="keyword">return</span> a-b;<span class="comment">//升序</span></div><div class="line">  <span class="comment">//return b-a; 或者在升序方法之后使用reverse()反转数组</span></div><div class="line">&#125;</div><div class="line">arr.sort(compare);</div></pre></td></tr></table></figure>
<h2 id="操作方法-concat-slice-splice"><a href="#操作方法-concat-slice-splice" class="headerlink" title="操作方法 concat() slice() splice()"></a>操作方法 concat() slice() splice()</h2><h3 id="concat"><a href="#concat" class="headerlink" title="concat()"></a>concat()</h3><p><code>concat()</code> 方法用于连接两个或多个数组，不会改变原始数组。</p>
<h3 id="slice"><a href="#slice" class="headerlink" title="slice()"></a>slice()</h3><p><code>slice()</code> 方法可从已有的数组中返回选定的元素，不会改变原始数组。</p>
<blockquote>
<p>arrayObject.slice(start,end)</p>
</blockquote>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>start</td>
<td>必需。规定从何处开始选取。如果是负数，那么它规定从数组尾部开始算起的位置。也就是说，-1 指最后一个元素，-2 指倒数第二个元素，以此类推。</td>
</tr>
<tr>
<td>end</td>
<td>可选。规定从何处结束选取。该参数是数组片断结束处的数组下标。如果没有指定该参数，那么切分的数组包含从 start 到数组结束的所有元素。如果这个参数是负数，那么它规定的是从数组尾部开始算起的元素。</td>
</tr>
</tbody>
</table>
<h3 id="splice"><a href="#splice" class="headerlink" title="splice()"></a>splice()</h3><p><code>splice()</code> 方法向/从数组中添加/删除项目，然后返回被删除的项目，会改变原始数组。</p>
<blockquote>
<p>arrayObject.splice(index,howmany,item1,…..,itemX)</p>
</blockquote>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>index</td>
<td>必需。整数，规定添加/删除项目的位置，使用负数可从数组结尾处规定位置。</td>
</tr>
<tr>
<td>howmany</td>
<td>必需。要删除的项目数量。如果设置为 0，则不会删除项目。</td>
</tr>
<tr>
<td>item1, …, itemX</td>
<td>可选。向数组添加的新项目。</td>
</tr>
</tbody>
</table>
<h2 id="位置方法"><a href="#位置方法" class="headerlink" title="位置方法"></a>位置方法</h2><h3 id="indexOf"><a href="#indexOf" class="headerlink" title="indexOf()"></a>indexOf()</h3><blockquote>
<p>indexOF() 从前往后查找，返回首次出现的位置（没有返回-1）</p>
</blockquote>
<h3 id="lastindexOf"><a href="#lastindexOf" class="headerlink" title="lastindexOf()"></a>lastindexOf()</h3><blockquote>
<p>lastindexOf() 从后往前查找，返回首次出现的位置（没有返回-1）</p>
</blockquote>
<h2 id="迭代方法"><a href="#迭代方法" class="headerlink" title="迭代方法"></a>迭代方法</h2><blockquote>
<p>迭代是重复反馈过程的活动，其目的通常是为了逼近所需目标或结果。每一次对过程的重复称为一次“迭代”，而每一次迭代得到的结果会作为下一次迭代的初始值。</p>
</blockquote>
<ol>
<li>every(): 对数组中的每一项运行给定的函数，如果该函数对每一项都返回true，则结果返回true。</li>
<li>filter(): 对数组中的每一项运行给定函数，返回该函数会返回true的项组成的数组。</li>
<li>forEach(): 对数组中的每一项运行给定函数，这个方法没有返回值。</li>
<li>map(): 对数组中的每一项运行给定函数，返回每次函数调用的结果组成的数组。</li>
<li>some(): 对数组中的每一项运行给定函数，如果该函数任意一项返回true，则返回true。</li>
</ol>
<h3 id="every-和some"><a href="#every-和some" class="headerlink" title="every()和some()"></a>every()和some()</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>];</div><div class="line"><span class="keyword">var</span> everyResult = numbers.every(<span class="function"><span class="keyword">function</span>(<span class="params">item, index, array</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> (item &gt; <span class="number">2</span>);</div><div class="line">&#125;);</div><div class="line"><span class="keyword">var</span> someResult = numbers.some(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> (item &gt; <span class="number">2</span>);</div><div class="line">&#125;);</div><div class="line"><span class="built_in">console</span>.log(everyResult);      <span class="comment">//false</span></div><div class="line"><span class="built_in">console</span>.log(someResult);        <span class="comment">//true</span></div></pre></td></tr></table></figure>
<h3 id="filter"><a href="#filter" class="headerlink" title="filter()"></a>filter()</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>];</div><div class="line"><span class="keyword">var</span> filterResult = numbers.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> (item &gt; <span class="number">2</span>);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(filterResult);  \\[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>]</div></pre></td></tr></table></figure>
<h3 id="map"><a href="#map" class="headerlink" title="map()"></a>map()</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>];</div><div class="line"><span class="keyword">var</span> mapResult = numbers.map(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> (item * <span class="number">2</span>);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(mapResult);     <span class="comment">//[2, 4, 6, 8, 10, 8, 6, 4, 2]</span></div></pre></td></tr></table></figure>
<h3 id="forEach"><a href="#forEach" class="headerlink" title="forEach()"></a>forEach()</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>];</div><div class="line">numbers.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item, index, arr</span>) </span>&#123;</div><div class="line">    <span class="comment">//这里执行一些操作</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 汇总篇 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> array </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[自定义range滑块]]></title>
      <url>/2017/11/17/rangeUI/</url>
      <content type="html"><![CDATA[<h2 id="Range"><a href="#Range" class="headerlink" title="Range"></a>Range</h2><p><img src="http://sandbox.runjs.cn/uploads/rs/234/bxxwrmn8/range.png" alt="range.png"></p>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul>
<li><a href="https://htmlpreview.github.io/?https://github.com/zc95/RangeSlider/blob/master/index.html" target="_blank" rel="external">demo地址</a></li>
<li><a href="https://github.com/zc95/RangeSlider" target="_blank" rel="external">github地址</a></li>
<li><a href="https://htmlpreview.github.io/?https://github.com/zc95/RangeSlider/blob/master/simple.html" target="_blank" rel="external">简易版demo地址</a></li>
</ul>
<h2 id="导入CSS和JS（github地址里有）"><a href="#导入CSS和JS（github地址里有）" class="headerlink" title="导入CSS和JS（github地址里有）"></a>导入CSS和JS（github地址里有）</h2><h3 id="https-github-com-zc95-RangeSlider-blob-master-myCSS-css"><a href="#https-github-com-zc95-RangeSlider-blob-master-myCSS-css" class="headerlink" title="https://github.com/zc95/RangeSlider/blob/master/myCSS.css"></a><a href="https://github.com/zc95/RangeSlider/blob/master/myCSS.css" target="_blank" rel="external">https://github.com/zc95/RangeSlider/blob/master/myCSS.css</a></h3>  <figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span> &#123;</div><div class="line">  <span class="attribute">font-family</span>: <span class="string">"微软雅黑"</span>;</div><div class="line">  <span class="attribute">letter-spacing</span>: -<span class="number">1px</span>;</div><div class="line">  <span class="attribute">text-shadow</span>: -<span class="number">2px</span> -<span class="number">1px</span> <span class="number">1px</span> <span class="number">#fff</span>, <span class="number">1px</span> <span class="number">2px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(0, 0, 0, 0.2);</div><div class="line">  <span class="attribute">font-weight</span>: <span class="number">300</span>;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">36px</span>;</div><div class="line">  <span class="attribute">margin</span>: <span class="number">10px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=range]</span> &#123;</div><div class="line">true<span class="attribute">-webkit-appearance</span>: none;</div><div class="line">true<span class="attribute">width</span>: <span class="number">300px</span>;</div><div class="line">true<span class="attribute">border-radius</span>: <span class="number">10px</span>; <span class="comment">/*这个属性设置使填充进度条时的图形为圆角*/</span></div><div class="line">true<span class="attribute">background</span>: <span class="built_in">-webkit-linear-gradient</span>(#2EB969, #2EB969) no-repeat;<span class="comment">/*进度条的颜色*/</span></div><div class="line">true<span class="attribute">background-size</span>: <span class="number">0%</span> <span class="number">100%</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=range]</span><span class="selector-pseudo">:focus</span> &#123;</div><div class="line">true<span class="attribute">outline</span>: none;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=range]</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">true<span class="attribute">cursor</span>:pointer;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=range]</span><span class="selector-pseudo">::-webkit-slider-runnable-track</span> &#123;</div><div class="line">true<span class="attribute">height</span>: <span class="number">6px</span>;</div><div class="line">true<span class="attribute">border-radius</span>: <span class="number">10px</span>; <span class="comment">/*将轨道设为圆角的*/</span></div><div class="line">  <span class="attribute">box-shadow</span>: <span class="number">0.2px</span> <span class="number">0.2px</span> <span class="number">1px</span> <span class="number">0.8px</span> <span class="number">#cec8c8</span> inset; <span class="comment">/*添加底部阴影*/</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=range]</span><span class="selector-pseudo">::-webkit-slider-thumb</span> &#123;</div><div class="line">true<span class="attribute">-webkit-appearance</span>: none;</div><div class="line">  <span class="attribute">cursor</span>: pointer;</div><div class="line">  <span class="attribute">height</span>: <span class="number">20px</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">20px</span>;</div><div class="line">  <span class="attribute">margin-top</span>:-<span class="number">6px</span>;</div><div class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</div><div class="line">  <span class="attribute">background-color</span>:white;</div><div class="line">  <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">3px</span> <span class="number">1px</span> <span class="number">#DEDEDE</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>  ​</p>
<h3 id="https-github-com-zc95-RangeSlider-blob-master-myJS-js"><a href="#https-github-com-zc95-RangeSlider-blob-master-myJS-js" class="headerlink" title="https://github.com/zc95/RangeSlider/blob/master/myJS.js"></a><a href="https://github.com/zc95/RangeSlider/blob/master/myJS.js" target="_blank" rel="external">https://github.com/zc95/RangeSlider/blob/master/myJS.js</a></h3>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">$.fn.RangeSlider = <span class="function"><span class="keyword">function</span>(<span class="params">cfg</span>)</span>&#123;</div><div class="line"> <span class="keyword">var</span> userAgent = navigator.userAgent;</div><div class="line"> <span class="keyword">var</span> isWebkit = (userAgent.indexOf(<span class="string">"AppleWebKit"</span>) &gt;= <span class="number">0</span>);</div><div class="line"> <span class="keyword">var</span> isIE = isIE();</div><div class="line"> <span class="function"><span class="keyword">function</span> <span class="title">isIE</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> isIE = <span class="literal">false</span>;</div><div class="line">  <span class="keyword">if</span> (<span class="built_in">window</span>.ActiveXObject || <span class="string">"ActiveXObject"</span> <span class="keyword">in</span> <span class="built_in">window</span>) &#123;</div><div class="line">    isIE = <span class="literal">true</span>;</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    isIE = (userAgent.indexOf(<span class="string">"compatible"</span>) &gt; <span class="number">-1</span> &amp;&amp; userAgent.indexOf(<span class="string">"MSIE"</span>) &gt; <span class="number">-1</span></div><div class="line">    &amp;&amp; !(userAgent.indexOf(<span class="string">"Opera"</span>) &gt; <span class="number">-1</span>));</div><div class="line">    isIE = <span class="literal">false</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> isIE;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">this</span>.sliderCfg = &#123;</div><div class="line">   min: cfg &amp;&amp; !<span class="built_in">isNaN</span>(<span class="built_in">parseFloat</span>(cfg.min)) ? <span class="built_in">Number</span>(cfg.min) : <span class="literal">null</span>, </div><div class="line">   max: cfg &amp;&amp; !<span class="built_in">isNaN</span>(<span class="built_in">parseFloat</span>(cfg.max)) ? <span class="built_in">Number</span>(cfg.max) : <span class="literal">null</span>,</div><div class="line">   step: cfg &amp;&amp; <span class="built_in">Number</span>(cfg.step) ? cfg.step : <span class="number">1</span>,</div><div class="line">   callback: cfg &amp;&amp; cfg.callback ? cfg.callback : <span class="literal">null</span></div><div class="line">  &#125;;</div><div class="line">  <span class="keyword">var</span> $input = $(<span class="keyword">this</span>);</div><div class="line">  <span class="keyword">var</span> min = <span class="keyword">this</span>.sliderCfg.min;</div><div class="line">  <span class="keyword">var</span> max = <span class="keyword">this</span>.sliderCfg.max;</div><div class="line">  <span class="keyword">var</span> step = <span class="keyword">this</span>.sliderCfg.step;</div><div class="line">  <span class="keyword">var</span> callback = <span class="keyword">this</span>.sliderCfg.callback;</div><div class="line">  $input.attr(<span class="string">'min'</span>, min).attr(<span class="string">'max'</span>, max).attr(<span class="string">'step'</span>, step);</div><div class="line">  <span class="keyword">var</span> event = <span class="literal">null</span>;</div><div class="line">  <span class="keyword">if</span> (isIE) &#123;</div><div class="line">   event = <span class="string">"change"</span>;</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">   event = <span class="string">"input"</span>;</div><div class="line">  &#125;	</div><div class="line">  $input.bind(event, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">   $input.attr(<span class="string">'value'</span>, <span class="keyword">this</span>.value);		</div><div class="line">   <span class="keyword">if</span> (isWebkit) &#123;</div><div class="line">    $input.css( <span class="string">'background-size'</span>, <span class="keyword">this</span>.value + <span class="string">'% 100%'</span> ); </div><div class="line">   &#125;	</div><div class="line">   <span class="keyword">if</span> ($.isFunction(callback)) &#123;</div><div class="line">    callback(<span class="keyword">this</span>);</div><div class="line">   &#125;</div><div class="line"> &#125;);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>  ​</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">  进度条&amp;emsp;<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"num"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">span</span>&gt;</span>%</div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"range"</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  $(<span class="string">'input'</span>).RangeSlider(&#123;</div><div class="line">    step: <span class="number">0.1</span>,</div><div class="line">    callback: change</div><div class="line">  &#125;);</div><div class="line">&#125;);</div><div class="line"><span class="keyword">var</span> change = <span class="function"><span class="keyword">function</span>(<span class="params">$input</span>) </span>&#123;</div><div class="line">  <span class="comment">/*内容可自行定义*/</span></div><div class="line">  $(<span class="string">"#num"</span>).text($(<span class="string">'input'</span>).val());</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> demo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> css </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[column]]></title>
      <url>/2017/11/11/column/</url>
      <content type="html"><![CDATA[<h2 id="CSS3多列"><a href="#CSS3多列" class="headerlink" title="CSS3多列"></a>CSS3多列</h2><p>CSS3 可以将文本内容设计成像报纸一样的多列布局，如下实例：</p>
<p><img src="http://sandbox.runjs.cn/uploads/rs/234/bxxwrmn8/fo2zxn7p.png" alt="示例"></p>
<h2 id="CSS3-多列属性"><a href="#CSS3-多列属性" class="headerlink" title="CSS3 多列属性"></a>CSS3 多列属性</h2><ul>
<li><code>column-count</code></li>
<li><code>column-gap</code></li>
<li><code>column-rule-style</code></li>
<li><code>column-rule-width</code></li>
<li><code>column-rule-color</code></li>
<li><code>column-rule</code></li>
<li><code>column-span</code></li>
<li><code>column-width</code></li>
</ul>
<h2 id="CSS3-创建多列"><a href="#CSS3-创建多列" class="headerlink" title="CSS3 创建多列"></a>CSS3 创建多列</h2><p><code>column-count</code> 属性指定了需要分割的列数</p>
<p>以下实例将 <code>&lt;div&gt;</code> 元素中的文本分为 3 列：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.newspaper</span></div><div class="line">&#123;</div><div class="line">true<span class="attribute">-moz-column-count</span>:<span class="number">3</span>; <span class="comment">/* Firefox */</span></div><div class="line">true<span class="attribute">-webkit-column-count</span>:<span class="number">3</span>; <span class="comment">/* Safari and Chrome */</span></div><div class="line">true<span class="attribute">column-count</span>:<span class="number">3</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"newspaper"</span>&gt;</span>....................<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><a href="http://www.runoob.com/try/try.php?filename=trycss3_column-count" target="_blank" rel="external">尝试一下 »</a></p>
<h2 id="CSS3-多列中列与列间的间隙"><a href="#CSS3-多列中列与列间的间隙" class="headerlink" title="CSS3 多列中列与列间的间隙"></a>CSS3 多列中列与列间的间隙</h2><p><code>column-gap</code> 属性指定了列与列间的间隙</p>
<p>以下实例指定了列与列间的间隙为 40 像素：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.newspaper</span></div><div class="line">&#123;</div><div class="line">true<span class="attribute">-moz-column-count</span>:<span class="number">3</span>; <span class="comment">/* Firefox */</span></div><div class="line">true<span class="attribute">-webkit-column-count</span>:<span class="number">3</span>; <span class="comment">/* Safari and Chrome */</span></div><div class="line">true<span class="attribute">column-count</span>:<span class="number">3</span>;</div><div class="line"></div><div class="line">true<span class="attribute">-moz-column-gap</span>:<span class="number">40px</span>; <span class="comment">/* Firefox */</span></div><div class="line">true<span class="attribute">-webkit-column-gap</span>:<span class="number">40px</span>; <span class="comment">/* Safari and Chrome */</span></div><div class="line">true<span class="attribute">column-gap</span>:<span class="number">40px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"newspaper"</span>&gt;</span>....................<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><a href="http://www.runoob.com/try/try.php?filename=trycss3_column-gap" target="_blank" rel="external">尝试一下 »</a></p>
<h2 id="CSS3-列边框"><a href="#CSS3-列边框" class="headerlink" title="CSS3 列边框"></a>CSS3 列边框</h2><p><code>column-rule-style</code> 属性指定了列与列间的边框样式：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.newspaper</span></div><div class="line">&#123;</div><div class="line">true<span class="attribute">-webkit-column-rule-style</span>: solid; <span class="comment">/* Chrome, Safari, Opera */</span></div><div class="line">    <span class="attribute">-moz-column-rule-style</span>: solid; <span class="comment">/* Firefox */</span></div><div class="line">    <span class="attribute">column-rule-style</span>: solid;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="http://www.runoob.com/try/try.php?filename=trycss3_column-rule-style" target="_blank" rel="external">尝试一下 »</a></p>
<p><code>column-rule-width</code> 属性指定了两列的边框厚度：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span> &#123;</div><div class="line">    <span class="attribute">-webkit-column-rule-width</span>: <span class="number">1px</span>; <span class="comment">/* Chrome, Safari, Opera */</span></div><div class="line">    <span class="attribute">-moz-column-rule-width</span>: <span class="number">1px</span>; <span class="comment">/* Firefox */</span></div><div class="line">    <span class="attribute">column-rule-width</span>: <span class="number">1px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="http://www.runoob.com/try/try.php?filename=trycss3_column-rule-width" target="_blank" rel="external">尝试一下 »</a></p>
<p><code>column-rule-color</code> 属性指定了两列的边框颜色：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span> &#123;</div><div class="line">    <span class="attribute">-webkit-column-rule-color</span>: lightblue; <span class="comment">/* Chrome, Safari, Opera */</span></div><div class="line">    <span class="attribute">-moz-column-rule-color</span>: lightblue; <span class="comment">/* Firefox */</span></div><div class="line">    <span class="attribute">column-rule-color</span>: lightblue;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="http://www.runoob.com/try/try.php?filename=trycss3_column-rule-color" target="_blank" rel="external">尝试一下 »</a></p>
<p><code>column-rule</code> 属性是 column-rule-* 所有属性的简写。</p>
<p>以下实例设置了列直接的边框的厚度，样式及颜色：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span> &#123;</div><div class="line">    <span class="attribute">-webkit-column-rule</span>: <span class="number">1px</span> solid lightblue; <span class="comment">/* Chrome, Safari, Opera */</span></div><div class="line">    <span class="attribute">-moz-column-rule</span>: <span class="number">1px</span> solid lightblue; <span class="comment">/* Firefox */</span></div><div class="line">    <span class="attribute">column-rule</span>: <span class="number">1px</span> solid lightblue;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="http://www.runoob.com/try/try.php?filename=trycss3_column-rule" target="_blank" rel="external">尝试一下 »</a></p>
<h2 id="指定元素跨越多少列"><a href="#指定元素跨越多少列" class="headerlink" title="指定元素跨越多少列"></a>指定元素跨越多少列</h2><p>以下实例指定 <code>&lt;h2&gt;</code> 元素跨越所有列：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h2</span> &#123;</div><div class="line">    <span class="attribute">-webkit-column-span</span>: all; <span class="comment">/* Chrome, Safari, Opera */</span></div><div class="line">    <span class="attribute">column-span</span>: all;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="http://www.runoob.com/try/try.php?filename=trycss3_column-span" target="_blank" rel="external">尝试一下 »</a></p>
<h2 id="指定列的宽度"><a href="#指定列的宽度" class="headerlink" title="指定列的宽度"></a>指定列的宽度</h2><p><code>column-width</code> 属性指定了列的宽度。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span> &#123;</div><div class="line">    <span class="attribute">-webkit-column-width</span>: <span class="number">100px</span>; <span class="comment">/* Chrome, Safari, Opera */</span></div><div class="line">    <span class="attribute">column-width</span>: <span class="number">100px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="http://www.runoob.com/try/try.php?filename=trycss3_column-width" target="_blank" rel="external">尝试一下 »</a></p>
<h2 id="CSS3-多列属性-1"><a href="#CSS3-多列属性-1" class="headerlink" title="CSS3 多列属性"></a>CSS3 多列属性</h2><p>下表列出了所有 CSS3 的多列属性：</p>
<table>
<thead>
<tr>
<th style="text-align:left">属性</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><a href="http://www.runoob.com/cssref/css3-pr-column-count.html" target="_blank" rel="external">column-count</a></td>
<td>指定元素应该被分割的列数。</td>
</tr>
<tr>
<td style="text-align:left"><a href="http://www.runoob.com/cssref/css3-pr-column-fill.html" target="_blank" rel="external">column-fill</a></td>
<td>指定如何填充列</td>
</tr>
<tr>
<td style="text-align:left"><a href="http://www.runoob.com/cssref/css3-pr-column-gap.html" target="_blank" rel="external">column-gap</a></td>
<td>指定列与列之间的间隙</td>
</tr>
<tr>
<td style="text-align:left"><a href="http://www.runoob.com/cssref/css3-pr-column-rule.html" target="_blank" rel="external">column-rule</a></td>
<td>所有 column-rule-* 属性的简写</td>
</tr>
<tr>
<td style="text-align:left"><a href="http://www.runoob.com/cssref/css3-pr-column-rule-color.html" target="_blank" rel="external">column-rule-color</a></td>
<td>指定两列间边框的颜色</td>
</tr>
<tr>
<td style="text-align:left"><a href="http://www.runoob.com/cssref/css3-pr-column-rule-style.html" target="_blank" rel="external">column-rule-style</a></td>
<td>指定两列间边框的样式</td>
</tr>
<tr>
<td style="text-align:left"><a href="http://www.runoob.com/cssref/css3-pr-column-rule-width.html" target="_blank" rel="external">column-rule-width</a></td>
<td>指定两列间边框的厚度</td>
</tr>
<tr>
<td style="text-align:left"><a href="http://www.runoob.com/cssref/css3-pr-column-span.html" target="_blank" rel="external">column-span</a></td>
<td>指定元素要跨越多少列</td>
</tr>
<tr>
<td style="text-align:left"><a href="http://www.runoob.com/cssref/css3-pr-column-width.html" target="_blank" rel="external">column-width</a></td>
<td>指定列的宽度</td>
</tr>
<tr>
<td style="text-align:left"><a href="http://www.runoob.com/cssref/css3-pr-columns.html" target="_blank" rel="external">columns</a></td>
<td>设置 column-width 和 column-count 的简写</td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> 技术篇 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> css3 </tag>
            
            <tag> 布局 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[类似Windows文件的布局问题]]></title>
      <url>/2017/11/03/AdaptiveLayout/</url>
      <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>如何做到类似windows文件的布局：无论如何改变窗口（屏幕）的大小，文件或者文件夹的大小都是固定的，不同的是一行显示的数目会有所变化；</p>
<h2 id="百分比布局"><a href="#百分比布局" class="headerlink" title="百分比布局"></a>百分比布局</h2><p>首先这类布局，肯定会先想到百分比的方法（最快的方法），在不同手机上看的话当然没区别，比如一行显示4个的话，那么一个就是25%，但如果放到ipad或者电脑上来看的话，就大的有些恐怖了</p>
<h2 id="百分比加-media布局"><a href="#百分比加-media布局" class="headerlink" title="百分比加@media布局"></a>百分比加@media布局</h2><p>同上，我们可以用@media的方法来解决不同类型设备的差异问题，也就是多写几行css的问题</p>
<h2 id="我的方法"><a href="#我的方法" class="headerlink" title="我的方法"></a>我的方法</h2><p><code>var eachWidth = $(document).width() / Math.floor($(document).width() / 80);</code></p>
<p>假如我想每个div都在80px左右，那么一行就可以放 <code>$(document).width() / 80</code> 个，用 <code>Math.floor</code> 向下取整之后可以去掉不满一个的零头，再用屏幕宽度除以这个取整后的个数，就能得到长度在80±10的eachWidth值了</p>
<p>下面是在控制台的不同手机屏幕大小下console出来的数据：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">document</span>).width() / <span class="built_in">Math</span>.floor($(<span class="built_in">document</span>).width() / <span class="number">80</span>) <span class="comment">//iPad</span></div><div class="line">--&gt; <span class="number">85.33333333333333</span></div><div class="line"></div><div class="line">$(<span class="built_in">document</span>).width() / <span class="built_in">Math</span>.floor($(<span class="built_in">document</span>).width() / <span class="number">80</span>) <span class="comment">//iPhone 6 Plus</span></div><div class="line">--&gt; <span class="number">82.8</span></div><div class="line"></div><div class="line">$(<span class="built_in">document</span>).width() / <span class="built_in">Math</span>.floor($(<span class="built_in">document</span>).width() / <span class="number">80</span>) <span class="comment">//iPhone 6</span></div><div class="line">--&gt; <span class="number">93.75</span></div><div class="line"></div><div class="line">$(<span class="built_in">document</span>).width() / <span class="built_in">Math</span>.floor($(<span class="built_in">document</span>).width() / <span class="number">80</span>) <span class="comment">//iPhone 5</span></div><div class="line">--&gt; <span class="number">80</span></div><div class="line"></div><div class="line">$(<span class="built_in">document</span>).width() / <span class="built_in">Math</span>.floor($(<span class="built_in">document</span>).width() / <span class="number">80</span>) <span class="comment">//Nexus 6P</span></div><div class="line">--&gt; <span class="number">82.4</span></div></pre></td></tr></table></figure>
<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><ul>
<li><p>移动端</p>
<p><img src="http://sandbox.runjs.cn/uploads/rs/234/bxxwrmn8/buju1.png" alt="iPhone"></p>
</li>
</ul>
<ul>
<li><p>iPad</p>
<p><img src="http://sandbox.runjs.cn/uploads/rs/234/bxxwrmn8/buju2.png" alt="iPad"></p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术篇 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> css </tag>
            
            <tag> 页面布局 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[原生javascript和jquery的用法对比]]></title>
      <url>/2017/10/25/jsAndJq/</url>
      <content type="html"><![CDATA[<h2 id="选取元素"><a href="#选取元素" class="headerlink" title="选取元素"></a>选取元素</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// jQuery</span></div><div class="line"><span class="keyword">var</span> els = $(<span class="string">'.el'</span>);</div><div class="line"></div><div class="line"><span class="comment">// Native</span></div><div class="line"><span class="keyword">var</span> els = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.el'</span>);</div><div class="line"></div><div class="line"><span class="comment">// Shorthand</span></div><div class="line"><span class="keyword">var</span> $ = <span class="function"><span class="keyword">function</span> (<span class="params">el</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> <span class="built_in">document</span>.querySelectorAll(el);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>querySelectorAll方法返回的是NodeList对象，需要转换为数组。</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">myList = Array<span class="selector-class">.prototype</span><span class="selector-class">.slice</span><span class="selector-class">.call</span>(myNodeList)</div></pre></td></tr></table></figure>
<h2 id="创建元素"><a href="#创建元素" class="headerlink" title="创建元素"></a>创建元素</h2><figure class="highlight haxe"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// jQuery</span></div><div class="line"><span class="keyword">var</span> <span class="keyword">new</span><span class="type">El</span> = $(<span class="string">'&lt;div&gt;&lt;/div&gt;'</span>);</div><div class="line"></div><div class="line"><span class="comment">// Native</span></div><div class="line"><span class="keyword">var</span> <span class="keyword">new</span><span class="type">El</span> = document.createElement(<span class="string">'div'</span>);</div></pre></td></tr></table></figure>
<h2 id="添加事件"><a href="#添加事件" class="headerlink" title="添加事件"></a>添加事件</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// jQuery</span></div><div class="line">$(<span class="string">'.el'</span>).on(<span class="string">'event'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line"></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// Native</span></div><div class="line">[].forEach.call(<span class="built_in">document</span>.querySelectorAll(<span class="string">'.el'</span>), <span class="function"><span class="keyword">function</span> (<span class="params">el</span>) </span>&#123;</div><div class="line">  el.addEventListener(<span class="string">'event'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line"></div><div class="line">  &#125;, <span class="literal">false</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="get-set属性"><a href="#get-set属性" class="headerlink" title="get/set属性"></a>get/set属性</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// jQuery</span></div><div class="line">$(<span class="string">'.el'</span>).filter(<span class="string">':first'</span>).attr(<span class="string">'key'</span>, <span class="string">'value'</span>);</div><div class="line">$(<span class="string">'.el'</span>).filter(<span class="string">':first'</span>).attr(<span class="string">'key'</span>);</div><div class="line"></div><div class="line"><span class="comment">// Native</span></div><div class="line"><span class="built_in">document</span>.querySelector(<span class="string">'.el'</span>).setAttribute(<span class="string">'key'</span>, <span class="string">'value'</span>);</div><div class="line"><span class="built_in">document</span>.querySelector(<span class="string">'.el'</span>).getAttribute(<span class="string">'key'</span>);</div></pre></td></tr></table></figure>
<h2 id="添加和移除样式Class"><a href="#添加和移除样式Class" class="headerlink" title="添加和移除样式Class"></a>添加和移除样式Class</h2><p>DOM元素本身有一个可读写的className属性，可以用来操作class。</p>
<p>HTML 5还提供一个classList对象，功能更强大（IE 9不支持）。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// jQuery</span></div><div class="line">$(<span class="string">'.el'</span>).addClass(<span class="string">'class'</span>);</div><div class="line">$(<span class="string">'.el'</span>).removeClass(<span class="string">'class'</span>);</div><div class="line">$(<span class="string">'.el'</span>).toggleClass(<span class="string">'class'</span>);</div><div class="line"></div><div class="line"><span class="comment">// Native</span></div><div class="line"><span class="built_in">document</span>.querySelector(<span class="string">'.el'</span>).classList.add(<span class="string">'class'</span>);</div><div class="line"><span class="built_in">document</span>.querySelector(<span class="string">'.el'</span>).classList.remove(<span class="string">'class'</span>);</div><div class="line"><span class="built_in">document</span>.querySelector(<span class="string">'.el'</span>).classList.toggle(<span class="string">'class'</span>);</div></pre></td></tr></table></figure>
<h2 id="追加元素"><a href="#追加元素" class="headerlink" title="追加元素"></a>追加元素</h2><p>尾部追加元素：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// jQuery</span></div><div class="line">$(<span class="string">'.el'</span>).append($(<span class="string">'&lt;div/&gt;'</span>));</div><div class="line"></div><div class="line"><span class="comment">// Native</span></div><div class="line"><span class="built_in">document</span>.querySelector(<span class="string">'.el'</span>).appendChild(<span class="built_in">document</span>.createElement(<span class="string">'div'</span>));</div></pre></td></tr></table></figure>
<p>头部追加元素：</p>
<figure class="highlight qml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//jQuery</span></div><div class="line">$(‘.el’).prepend(<span class="string">'&lt;div&gt;&lt;/div&gt;'</span>)</div><div class="line"></div><div class="line"><span class="comment">//Native</span></div><div class="line"><span class="keyword">var</span> <span class="built_in">parent</span> = <span class="built_in">document</span>.querySelector(<span class="string">'.el'</span>);</div><div class="line"><span class="built_in">parent</span>.insertBefore(<span class="string">"&lt;div&gt;&lt;/div&gt;"</span>,<span class="built_in">parent</span>.childNodes[<span class="number">0</span>])</div></pre></td></tr></table></figure>
<h2 id="克隆元素"><a href="#克隆元素" class="headerlink" title="克隆元素"></a>克隆元素</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// jQuery</span></div><div class="line"><span class="keyword">var</span> clonedEl = $(<span class="string">'.el'</span>).clone();</div><div class="line"></div><div class="line"><span class="comment">// Native</span></div><div class="line"><span class="keyword">var</span> clonedEl = <span class="built_in">document</span>.querySelector(<span class="string">'.el'</span>).cloneNode(<span class="literal">true</span>);</div></pre></td></tr></table></figure>
<h2 id="移除元素"><a href="#移除元素" class="headerlink" title="移除元素"></a>移除元素</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">Remove</div><div class="line"><span class="comment">// jQuery</span></div><div class="line">$(<span class="string">'.el'</span>).remove();</div><div class="line"></div><div class="line"><span class="comment">// Native</span></div><div class="line">remove(<span class="string">'.el'</span>);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">remove</span>(<span class="params">el</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> toRemove = <span class="built_in">document</span>.querySelector(el);</div><div class="line"></div><div class="line">  toRemove.parentNode.removeChild(toRemove);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="获取父级元素"><a href="#获取父级元素" class="headerlink" title="获取父级元素"></a>获取父级元素</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// jQuery</span></div><div class="line">$(<span class="string">'.el'</span>).parent();</div><div class="line"></div><div class="line"><span class="comment">// Native</span></div><div class="line"><span class="built_in">document</span>.querySelector(<span class="string">'.el'</span>).parentNode;</div></pre></td></tr></table></figure>
<h2 id="获取上一个-下一个元素（Prev-next-element）"><a href="#获取上一个-下一个元素（Prev-next-element）" class="headerlink" title="获取上一个/下一个元素（Prev/next element）"></a>获取上一个/下一个元素（Prev/next element）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// jQuery</span></div><div class="line">$(<span class="string">'.el'</span>).prev();</div><div class="line">$(<span class="string">'.el'</span>).next();</div><div class="line"></div><div class="line"><span class="comment">// Native</span></div><div class="line"><span class="built_in">document</span>.querySelector(<span class="string">'.el'</span>).previousElementSibling;</div><div class="line"><span class="built_in">document</span>.querySelector(<span class="string">'.el'</span>).nextElementSibling;</div></pre></td></tr></table></figure>
<h2 id="XHR-and-AJAX"><a href="#XHR-and-AJAX" class="headerlink" title="XHR and AJAX"></a>XHR and AJAX</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// jQuery</span></div><div class="line">$.get(<span class="string">'url'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</div><div class="line"></div><div class="line">&#125;);</div><div class="line">$.post(<span class="string">'url'</span>, &#123;<span class="attr">data</span>: data&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</div><div class="line"></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// Native</span></div><div class="line"></div><div class="line"><span class="comment">// get</span></div><div class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</div><div class="line"></div><div class="line">xhr.open(<span class="string">'GET'</span>, url);</div><div class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line">xhr.send();</div><div class="line"></div><div class="line"><span class="comment">// post</span></div><div class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest()</div><div class="line"></div><div class="line">xhr.open(<span class="string">'POST'</span>, url);</div><div class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line">xhr.send(&#123;<span class="attr">data</span>: data&#125;);</div></pre></td></tr></table></figure>
<h2 id="清空子元素"><a href="#清空子元素" class="headerlink" title="清空子元素"></a>清空子元素</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//jQuery</span></div><div class="line">$(<span class="string">"#elementID"</span>).empty()</div><div class="line"></div><div class="line"><span class="comment">//Native</span></div><div class="line"><span class="keyword">var</span> element = <span class="built_in">document</span>.getElementById(<span class="string">"elementID"</span>)</div><div class="line"><span class="keyword">while</span>(element.firstChild) element.removeChild(element.firstChild);</div></pre></td></tr></table></figure>
<h2 id="检查是否有子元素"><a href="#检查是否有子元素" class="headerlink" title="检查是否有子元素"></a>检查是否有子元素</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//jQuery</span></div><div class="line"><span class="keyword">if</span> (!$(<span class="string">"#elementID"</span>).is(<span class="string">":empty"</span>))&#123;&#125;</div><div class="line"></div><div class="line"><span class="comment">//Native</span></div><div class="line"><span class="keyword">if</span> (<span class="built_in">document</span>.getElementById(<span class="string">"elementID"</span>).hasChildNodes())&#123;&#125;</div></pre></td></tr></table></figure>
<h2 id="document-ready"><a href="#document-ready" class="headerlink" title="$(document).ready"></a>$(document).ready</h2><p>DOM加载完成，会触发DOMContentLoaded事件，等同于jQuery的$(document).ready方法。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"DOMContentLoaded"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">// ...</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="数据储存"><a href="#数据储存" class="headerlink" title="数据储存"></a>数据储存</h2><p>jQuery对象可以储存数据。</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"body"</span>)<span class="meta">.data</span>(<span class="string">"foo"</span>, <span class="number">52</span>)<span class="comment">;</span></div><div class="line">$(<span class="string">"body"</span>)<span class="meta">.data</span>(<span class="string">"foo"</span>)<span class="comment">;</span></div></pre></td></tr></table></figure>
<p>HTML 5有一个dataset对象，也有类似的功能（IE 10不支持），不过只能保存字符串。</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">element.dataset.<span class="keyword">user</span> <span class="title">= JSON</span>.stringify(user);</div><div class="line">element.dataset.score = score;</div></pre></td></tr></table></figure>
<h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><p>jQuery的animate方法，用于生成动画效果。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash">foo.animate(<span class="string">'slow'</span>, &#123; x: <span class="string">'+=10px'</span> &#125;)</span></div></pre></td></tr></table></figure>
<p>jQuery的动画效果，很大部分基于DOM。但是目前，CSS 3的动画远比DOM强大，所以可以把动画效果写进CSS，然后通过操作DOM元素的class，来展示动画。</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">foo<span class="selector-class">.classList</span><span class="selector-class">.add</span>(<span class="string">'animate'</span>)</div></pre></td></tr></table></figure>
<p>如果需要对动画使用回调函数，CSS 3也定义了相应的事件。</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">el</span><span class="selector-class">.addEventListener</span>(<span class="string">"webkitTransitionEnd"</span>, transitionEnded);</div><div class="line"><span class="selector-tag">el</span><span class="selector-class">.addEventListener</span>(<span class="string">"transitionend"</span>, transitionEnded);</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 汇总篇 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> html </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[css换行问题]]></title>
      <url>/2017/10/25/wordBreak/</url>
      <content type="html"><![CDATA[<p>css实现强制不换行/自动换行/强制换行</p>
<h2 id="强制换行"><a href="#强制换行" class="headerlink" title="强制换行"></a>强制换行</h2><p><strong>按单词自动换行</strong></p>
<blockquote>
<p>p { word-wrap:break-word; }</p>
</blockquote>
<p><strong>强制按英文字母断行</strong> <code>需要将行内元素设置为块级元素</code> </p>
<blockquote>
<p>p { word-break:break-all; }</p>
</blockquote>
<h2 id="强制不换行"><a href="#强制不换行" class="headerlink" title="强制不换行"></a>强制不换行</h2><p><strong>强制不换行</strong></p>
<blockquote>
<p>p { white-space:nowrap; }</p>
</blockquote>
<p><strong>超出显示省略号</strong></p>
<blockquote>
<p>p { white-space:nowrap; text-overflow:ellipsis; overflow:hidden; }</p>
<p>一定要给文字的父容器</p>
<p>如果父容器是行级，一定要转成块级（一定要是 block，设置为 inline-block 无效）</p>
</blockquote>
<p><strong>white-space: <code>normal</code> <code>pre</code> <code>nowrap</code> <code>pre-wrap</code> <code>pre-line</code> <code>inherit</code> ;</strong> </p>
<blockquote>
<p>white-space 属性设置如何处理元素内的空白 </p>
</blockquote>
<ul>
<li>normal 默认。多个空白或者多个换行将被当一个空白或一个换行处理- pre 空白和换行会被浏览器保留。其行为方式类似 HTML 中的 pre 标签- nowrap 文本不会换行，文本会在在同一行上继续，直到遇到 br 标签为止- pre-wrap 保留空白符序列，但是正常地进行换行 - pre-line 合并空白符序列，但是保留换行符- inherit 规定应该从父元素继承 white-space 属性的值<br><strong>word-break: <code>normal</code> <code>break-all</code> <code>keep-all</code> ;</strong> <blockquote>
<p>word-break 属性用来标明怎么样进行单词内的断句</p>
</blockquote>
</li>
<li>normal：使用浏览器默认的换行规则- break-all:允许再单词内换行 - keep-all:只能在半角空格或连字符处换行</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术篇 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> html </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[表头固定]]></title>
      <url>/2017/10/24/amazingTable/</url>
      <content type="html"><![CDATA[<p>table的表头固定 ——— 上下滚动表头固定，左右滚动表头跟随滚动</p>
<h2 id="关于表格固定"><a href="#关于表格固定" class="headerlink" title="关于表格固定"></a>关于表格固定</h2><p>如果数据不是很多，一般都是用两个表格，一个放thead，另一个放tbody，这个没难度就不再赘述了</p>
<p>如果数据很多就要考虑左右滚动的情况了</p>
<h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>demo: <a href="http://jsrun.net/biiKp/show" target="_blank" rel="external">http://jsrun.net/biiKp/show</a></p>
<p>同样是两个table，一个放thead，另一个放tbody，用两个div分别包裹起来</p>
<p>这两个div依赖于他们的的父容器进行absolute定位</p>
<blockquote>
<p>theadDiv {</p>
<p> position: absolute;<br> left: 0;<br> right: 0;<br> overflow: hidden; //这里hidden是用于隐藏滚动条<br>}</p>
<p>tbodyDiv {</p>
<p> position: absolute;<br> top: 35px;<br> left: 0;<br> right: 0;<br> bottom: 0;<br> overflow: auto;<br>}</p>
</blockquote>
<p>给放置thead的div添加样式 <code>overflow: hidden;</code> ，表头不需要看到滚动条</p>
<p>给放置tbody的div添加样式 <code>overflow: auto;</code> ，表的主体需要滚动条</p>
<p>这时只需要在滚动下面的tbody时，同样滚动上面的thead就行</p>
<blockquote>
<p>$(‘#tbodyDiv’).on(‘scroll’, function () {</p>
<p>  $(“#theadDiv”).scrollLeft($(‘#tbodyDiv’).scrollLeft());</p>
<p>  });</p>
<p>})</p>
</blockquote>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>demo: <a href="http://jsrun.net/2iiKp/show" target="_blank" rel="external">http://jsrun.net/2iiKp/show</a></p>
<ol>
<li>大概思路就是  <code>容器A</code> 下面有 <code>容器1（放置thead）</code> 和 <code>容器2（放置tbody）</code></li>
<li>x轴滚动条属于 <code>容器A</code> ，滚动 <code>容器1（放置thead）</code> 和 <code>容器2（放置tbody）</code></li>
<li>y轴属于 <code>容器2</code> ，滚动 <code>tbody</code></li>
</ol>
<p>这个方法有缺陷，就是y轴的滚动条必须要当x轴滚到最右边才看得到，当然Mac下无差（Mac下的滚动条不滚动的时候是隐藏的，而win系统下就会影响美观，但都不影响操作，毕竟我们有鼠标滚轮）</p>
]]></content>
      
        <categories>
            
            <category> demo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> css </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[DOM]]></title>
      <url>/2017/10/21/DOM/</url>
      <content type="html"><![CDATA[<p>为什么我们要尽量少的去操作DOM结构？</p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在前端开发的过程中，javascript极为重要的一个功能就是对DOM对象的操作，无论增删改查在前端页面操作这一范围内都是比较消耗性能的。如何高效率的，便捷的操作DOM，这就是本文要讲述的，希望看完全文，你能知道如何更高效的通过原生js以及jQuery操作DOM元素。</p>
<h2 id="性能影响"><a href="#性能影响" class="headerlink" title="性能影响"></a>性能影响</h2><ol>
<li>DOM修改导致的页面重绘<code>repaint</code>、重构<code>reflow</code>，重新排版是用户阻塞的操作，同时，如果频繁重排，CPU使用率也会猛涨</li>
<li>repaint意味着样式的改变比如div调整了背景色等，但是位置不变，只改变我们操作的元素</li>
<li>reflow意味着结构的改变，比如一堆元素堆叠，改变其中一个的宽高，那么相应的所有元素的位置都要改变</li>
<li>所以通常来看repaint的代价要远小于reflow，速度也更快</li>
</ol>
<h2 id="如何避免"><a href="#如何避免" class="headerlink" title="如何避免"></a>如何避免</h2><h3 id="能放到DOM操作之外的操作就放到外面，DOM操作要尽量少"><a href="#能放到DOM操作之外的操作就放到外面，DOM操作要尽量少" class="headerlink" title="能放到DOM操作之外的操作就放到外面，DOM操作要尽量少"></a>能放到DOM操作之外的操作就放到外面，DOM操作要尽量少</h3><p>这是一个不好的事例：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> $obj = $(<span class="string">"#obj"</span>);</div><div class="line"><span class="keyword">var</span> data = [&#123;<span class="string">"id"</span>:<span class="number">0</span>,<span class="string">"name"</span>:<span class="string">"a"</span>&#125;,&#123;<span class="string">"id"</span>:<span class="number">1</span>,<span class="string">"name"</span>:<span class="string">"b"</span>&#125;];</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.length; i++) &#123;</div><div class="line">    $obj.append(<span class="string">'&lt;option value="'</span>+data[i].id+<span class="string">'"&gt;'</span>+data[i].name+<span class="string">'&lt;/option&gt;'</span>);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>更好的做法，使用容器存放临时变更，最后再一次性更新DOM：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> $obj = $(<span class="string">"#obj"</span>);</div><div class="line"><span class="keyword">var</span> data = [&#123;<span class="string">"id"</span>:<span class="number">0</span>,<span class="string">"name"</span>:<span class="string">"a"</span>&#125;,&#123;<span class="string">"id"</span>:<span class="number">1</span>,<span class="string">"name"</span>:<span class="string">"b"</span>&#125;];</div><div class="line"><span class="keyword">var</span> tempStr = <span class="string">""</span>;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.length; i++) &#123;</div><div class="line">    tempStr +=(<span class="string">'&lt;option value="'</span>+data[i].id+<span class="string">'"&gt;'</span>+data[i].name+<span class="string">'&lt;/option&gt;'</span>);</div><div class="line">&#125;;</div><div class="line">$obj.html(tempStr);</div></pre></td></tr></table></figure>
<h3 id="大范围操作先把容器隐藏，在其中操作完成后再显示"><a href="#大范围操作先把容器隐藏，在其中操作完成后再显示" class="headerlink" title="大范围操作先把容器隐藏，在其中操作完成后再显示"></a>大范围操作先把容器隐藏，在其中操作完成后再显示</h3><p>这个也算是优化的一种，这原理涉及到浏览器加载和渲染的原理,简单说就是隐藏的元素其中不会产生reflow</p>
<h3 id="样式操作不要注意修改属性，直接替换class"><a href="#样式操作不要注意修改属性，直接替换class" class="headerlink" title="样式操作不要注意修改属性，直接替换class"></a>样式操作不要注意修改属性，直接替换class</h3><p>这个还是比较容易理解的，你逐一修改要访问很多次，而替换class就相当于批量操作了，访问一次DOM就可以了,当然性能提高了</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>对于性能方面，平时应注意积累。</p>
]]></content>
      
        <categories>
            
            <category> 技术篇 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> html </tag>
            
            <tag> javascript </tag>
            
            <tag> jquery </tag>
            
            <tag> DOM操作 </tag>
            
            <tag> 循环 </tag>
            
            <tag> 渲染 </tag>
            
            <tag> 性能 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[文本框模糊查询]]></title>
      <url>/2017/10/21/input/</url>
      <content type="html"><![CDATA[<p>文本框模糊匹配(纯html+css+jquery简单实现) ，自己写的一个小组件。</p>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul>
<li><a href="https://htmlpreview.github.io/?https://github.com/zc95/Fuzzy-Query/blob/master/index.html" target="_blank" rel="external">demo地址</a></li>
<li><a href="https://github.com/zc95/Fuzzy-Query" target="_blank" rel="external">github地址</a></li>
</ul>
<h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><ol>
<li>引入<code>css</code>和<code>js</code>（github里面有）</li>
<li>给需要加模糊查询的input加上<code>class=&quot;filter_input&quot;</code>，id必需</li>
<li>getFilters(id, msg);（前面一个参数是input的id，后面一个参数是后台返的json字符串）</li>
</ol>
<h2 id="JS主要代码"><a href="#JS主要代码" class="headerlink" title="JS主要代码"></a>JS主要代码</h2><p><strong>创建需要的div包裹住文本框</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">wraps</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i&lt;$(<span class="string">'.filter_input'</span>).length ; i++)&#123;</div><div class="line">    <span class="keyword">var</span> id = $(<span class="string">'.filter_input'</span>).eq(i).attr(<span class="string">'id'</span>);</div><div class="line">    <span class="keyword">var</span> $width = $(<span class="string">'.filter_input'</span>).eq(i).css(<span class="string">"width"</span>);</div><div class="line">    $(<span class="string">'#'</span> + id).wrap(<span class="string">"&lt;div class='filter_wrap' id='filter_wrap"</span>+id+<span class="string">"'&gt;&lt;/div&gt;"</span>);</div><div class="line">  $(<span class="string">'#'</span> + id).after(<span class="string">"&lt;div style=\"width:"</span> + $width + <span class="string">";\" class='filter_case' id='filter_"</span> + id + <span class="string">"'&gt;&lt;/div&gt;&lt;span class='arrowTip'&gt;▼&lt;/span&gt;"</span>);</div><div class="line">  &#125; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>根据后台返回的数据加载数据</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFilters</span>(<span class="params">id,msg</span>)</span>&#123;</div><div class="line">  <span class="keyword">var</span> html = <span class="string">""</span>;</div><div class="line">    $.each(<span class="built_in">eval</span>(msg), <span class="function"><span class="keyword">function</span> (<span class="params">i, n</span>) </span>&#123;</div><div class="line">      <span class="keyword">for</span>(key <span class="keyword">in</span> n)&#123;</div><div class="line">        html += <span class="string">"&lt;div onclick=\"inme('"</span> + n[key] + <span class="string">"')\"  class=\"div_item\"&gt;"</span> + n[key] + <span class="string">"&lt;/div&gt;"</span>;</div><div class="line">      &#125;;</div><div class="line">    &#125;);</div><div class="line">  $(<span class="string">'#filter_'</span>+id).html(html);</div><div class="line">  $(<span class="string">'#filter_'</span>+id).append(<span class="string">"&lt;div onclick='NothingClick()' class=\"Nothing\"&gt;无匹配项&lt;/div&gt;"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>弹出列表框</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">".filter_input"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  $(<span class="string">".arrowTip"</span>).text(<span class="string">"▼"</span>);</div><div class="line">  $(<span class="string">".filter_case"</span>).hide();</div><div class="line">  $(<span class="string">"#filter_"</span> + <span class="keyword">this</span>.id).show();</div><div class="line">  $(<span class="string">"#filter_"</span> + <span class="keyword">this</span>.id).next().text(<span class="string">"▲"</span>);</div><div class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>监听文本框输入</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">".filter_input"</span>).keyup(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  $(<span class="string">"#filter_"</span> + <span class="keyword">this</span>.id).show(); <span class="comment">//只要输入就显示列表框 </span></div><div class="line">  <span class="keyword">if</span> ($(<span class="string">"#"</span>+ <span class="keyword">this</span>.id).val().length &lt;= <span class="number">0</span>) &#123;</div><div class="line">    $(<span class="string">"#filter_"</span>+ <span class="keyword">this</span>.id).find(<span class="string">".div_item"</span>).show(); <span class="comment">//如果什么都没填，跳出，保持全部显示状态  </span></div><div class="line">    <span class="keyword">return</span>;</div><div class="line">  &#125;</div><div class="line">  $(<span class="string">"#filter_"</span>+ <span class="keyword">this</span>.id).find(<span class="string">".div_item"</span>).hide(); <span class="comment">//如果填了，先将所有的选项隐藏  </span></div><div class="line">  <span class="keyword">var</span> num=<span class="number">0</span>;</div><div class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; $(<span class="string">"#filter_"</span>+ <span class="keyword">this</span>.id).find(<span class="string">".div_item"</span>).length; i++) &#123;</div><div class="line">    <span class="comment">//模糊匹配，将所有匹配项显示  </span></div><div class="line">    <span class="keyword">if</span> ($(<span class="string">"#filter_"</span>+ <span class="keyword">this</span>.id).find(<span class="string">".div_item"</span>).eq(i).text().toLowerCase().indexOf($(<span class="string">"#"</span> + <span class="keyword">this</span>.id).val().toLowerCase()) &gt;= <span class="number">0</span>) &#123;</div><div class="line">      num++;</div><div class="line">      $(<span class="string">"#filter_"</span>+ <span class="keyword">this</span>.id).find(<span class="string">".div_item"</span>).eq(i).show();</div><div class="line">      $(<span class="string">'.Nothing'</span>).hide();</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">if</span>(num==<span class="number">0</span>)&#123;</div><div class="line">    $(<span class="string">'.Nothing'</span>).show();</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>模糊项的点击</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">inme</span>(<span class="params">name</span>) </span>&#123;</div><div class="line">   <span class="keyword">var</span> event = event? event: <span class="built_in">window</span>.event;      </div><div class="line">    <span class="keyword">var</span> srcObj = ((event.srcElement)?event.srcElement:event.target);       </div><div class="line">  $(srcObj).parent().prev().val(name);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p><strong>点击无匹配</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">NothingClick</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="keyword">var</span> event = event? event: <span class="built_in">window</span>.event;      </div><div class="line">    <span class="keyword">var</span> srcObj = ((event.srcElement)?event.srcElement:event.target);   </div><div class="line">  $(srcObj).parent().prev().val(<span class="string">""</span>);</div><div class="line">  $(<span class="string">'.Nothing'</span>).hide();</div><div class="line">  $(<span class="string">".filter_case"</span>).hide();</div><div class="line">  $(<span class="string">".div_item"</span>).show();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>隐藏列表框</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"body"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  $(<span class="string">".filter_case"</span>).hide();</div><div class="line">  $(<span class="string">".arrowTip"</span>).text(<span class="string">"▼"</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="CSS主要代码"><a href="#CSS主要代码" class="headerlink" title="CSS主要代码"></a>CSS主要代码</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.filter_wrap</span>&#123;</div><div class="line">  <span class="attribute">display</span>:inline-block;</div><div class="line">  <span class="attribute">position</span>:relative;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.arrowTip</span>&#123;</div><div class="line">  <span class="attribute">position</span>:absolute;</div><div class="line">  <span class="attribute">right</span>:<span class="number">5px</span>;</div><div class="line">  <span class="attribute">top</span>:<span class="number">4px</span>;</div><div class="line">  <span class="attribute">color</span>:<span class="number">#c2c2c2</span>;</div><div class="line">  <span class="attribute">font-size</span>:<span class="number">13px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.Nothing</span>&#123;</div><div class="line">  <span class="attribute">height</span>: <span class="number">30px</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">260px</span>;</div><div class="line">  <span class="attribute">line-height</span>: <span class="number">30px</span>;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</div><div class="line">  <span class="attribute">text-align</span>:center;</div><div class="line">  <span class="attribute">color</span>:<span class="number">#999</span>;</div><div class="line">  <span class="attribute">display</span>:none;</div><div class="line">  <span class="attribute">cursor</span>:pointer;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.filter_case</span> &#123;</div><div class="line">  <span class="attribute">padding</span>:<span class="number">4px</span> <span class="number">0px</span> <span class="number">4px</span> <span class="number">0px</span>;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">  <span class="attribute">z-index</span>: <span class="number">100</span>;</div><div class="line">  <span class="attribute">height</span>:auto;</div><div class="line">  <span class="attribute">max-height</span>: <span class="number">200px</span>;</div><div class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#999</span>;</div><div class="line">  <span class="attribute">box-sizing</span>:border-box;</div><div class="line">  <span class="attribute">overflow-x</span>: hidden;</div><div class="line">  <span class="attribute">display</span>: none;</div><div class="line">  <span class="attribute">background-color</span>: white;</div><div class="line">  <span class="attribute">margin-top</span>:<span class="number">3px</span>;</div><div class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">4px</span> <span class="number">6px</span> <span class="built_in">rgba</span>(0,0,0,.24);</div><div class="line">  <span class="attribute">border-radius</span>: <span class="number">2px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.div_item</span> &#123;</div><div class="line">  <span class="attribute">text-indent</span>: <span class="number">8px</span>;</div><div class="line">  <span class="attribute">height</span>: <span class="number">30px</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">260px</span>;</div><div class="line">  <span class="attribute">white-space</span>: nowrap;</div><div class="line">  <span class="attribute">line-height</span>: <span class="number">30px</span>;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">13px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.div_item</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">  <span class="attribute">cursor</span>: pointer;</div><div class="line">  <span class="attribute">background-color</span>: <span class="number">#1C86EE</span>;</div><div class="line">  <span class="attribute">color</span>: white;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">input</span> &#123;</div><div class="line">  <span class="attribute">text-indent</span>: <span class="number">8px</span>;</div><div class="line">  <span class="attribute">box-sizing</span>:border-box;</div><div class="line">  <span class="attribute">outline</span>: none;</div><div class="line">  <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#999</span> <span class="meta">!important</span>;</div><div class="line">  <span class="attribute">text-indent</span>: <span class="number">8px</span>;</div><div class="line">  <span class="attribute">height</span>: <span class="number">30px</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">258px</span>;</div><div class="line">  <span class="attribute">box-sizing</span>:border-box;</div><div class="line">  <span class="attribute">-moz-box-sizing</span>:border-box; <span class="comment">/* Firefox */</span></div><div class="line">  <span class="attribute">-webkit-box-sizing</span>:border-box; <span class="comment">/* Safari */</span></div><div class="line">  <span class="attribute">outline</span>: none;</div><div class="line">  <span class="attribute">border-radius</span>: <span class="number">2px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="html和CSS部分的一些细节"><a href="#html和CSS部分的一些细节" class="headerlink" title="html和CSS部分的一些细节"></a>html和CSS部分的一些细节</h2><ol>
<li><blockquote>
<p>outline: none;  </p>
<p>outline （轮廓）是绘制于元素周围的一条线，位于边框边缘的外围，为了美观应该去掉</p>
</blockquote>
</li>
<li><blockquote>
<p>box-sizing:border-box;</p>
<p>这可令浏览器呈现出带有指定宽度和高度的框，并把边框和内边距放入框中。</p>
</blockquote>
</li>
<li><blockquote>
<p>autocomplete=”off”</p>
<p>autocomplete是form表单的属性，默认为on，其含义代表是否让浏览器自动记录之前输入的值，应该关闭记录</p>
</blockquote>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> demo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> css </tag>
            
            <tag> html </tag>
            
            <tag> javascript </tag>
            
            <tag> jquery </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[日常问题整理]]></title>
      <url>/2017/10/21/dailySummary/</url>
      <content type="html"><![CDATA[<p>记录每天学到的知识点或者遇到的问题</p>
<h2 id="从数组里随机取一项"><a href="#从数组里随机取一项" class="headerlink" title="从数组里随机取一项"></a>从数组里随机取一项</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">arr[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*arr.length)]</div></pre></td></tr></table></figure>
<h2 id="阻止浏览器默认的右键点击事件"><a href="#阻止浏览器默认的右键点击事件" class="headerlink" title="阻止浏览器默认的右键点击事件"></a>阻止浏览器默认的右键点击事件</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.document.oncontextmenu = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line"><span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="左击右击事件"><a href="#左击右击事件" class="headerlink" title="左击右击事件"></a>左击右击事件</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickMe</span>(<span class="params"></span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> event = event ? event : <span class="built_in">window</span>.event;</div><div class="line"><span class="keyword">if</span> (<span class="number">1</span> == event.which) &#123;</div><div class="line"><span class="comment">//左击</span></div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span> (<span class="number">3</span> == event.which) &#123;</div><div class="line"><span class="comment">//右击</span></div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="循环时候去掉最后一个逗号"><a href="#循环时候去掉最后一个逗号" class="headerlink" title="循环时候去掉最后一个逗号"></a>循环时候去掉最后一个逗号</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> json = <span class="built_in">eval</span>(msg), arr = [];</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> json[<span class="number">0</span>]) &#123;</div><div class="line">arr.push(k + <span class="string">"："</span> + json[<span class="number">0</span>][k] + <span class="string">"条"</span>);</div><div class="line">&#125;</div><div class="line">$(<span class="string">'#dataNum'</span>).html(arr.join(<span class="string">'，'</span>));</div></pre></td></tr></table></figure>
<h2 id="判断是否存在id为item元素"><a href="#判断是否存在id为item元素" class="headerlink" title="判断是否存在id为item元素"></a>判断是否存在id为item元素</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>($(<span class="string">'#item'</span>).length!=<span class="number">0</span>)&#123;<span class="comment">//因为jquery获取的元素是一个集合，看长度是否为0就可以知道是不是存在</span></div><div class="line"><span class="comment">//有元素</span></div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line"><span class="comment">//没有元素</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="生成区间随机数"><a href="#生成区间随机数" class="headerlink" title="生成区间随机数"></a>生成区间随机数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRandom</span>(<span class="params">m,n</span>)</span>&#123;</div><div class="line"><span class="keyword">return</span> <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*(n-m+<span class="number">1</span>)+m)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="小数转为百分数"><a href="#小数转为百分数" class="headerlink" title="小数转为百分数"></a>小数转为百分数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Number</span>(point*<span class="number">100</span>).toFixed(<span class="number">2</span>)+<span class="string">"%"</span>;</div></pre></td></tr></table></figure>
<h2 id="trim-去掉前后空白"><a href="#trim-去掉前后空白" class="headerlink" title="trim() 去掉前后空白"></a>trim() 去掉前后空白</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//去左空格;</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">ltrim</span>(<span class="params">s</span>)</span>&#123;</div><div class="line"><span class="keyword">return</span> s.replace(<span class="regexp">/(^\s*)/g</span>, <span class="string">""</span>);</div><div class="line">&#125;</div><div class="line"><span class="comment">//去右空格;</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">rtrim</span>(<span class="params">s</span>)</span>&#123;</div><div class="line"><span class="keyword">return</span> s.replace(<span class="regexp">/(\s*$)/g</span>, <span class="string">""</span>);</div><div class="line">&#125;</div><div class="line"><span class="comment">//去左右空格;</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">trim</span>(<span class="params">s</span>)</span>&#123;</div><div class="line"><span class="keyword">return</span> s.replace(<span class="regexp">/(^\s*)|(\s*$)/g</span>, <span class="string">""</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a>数组去重</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">QuChong</span>(<span class="params">arr</span>)</span>&#123;</div><div class="line"><span class="keyword">var</span> newArr =[];</div><div class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> arr)&#123;</div><div class="line"><span class="keyword">if</span>(!newArr.includes(arr[i]))&#123;</div><div class="line">newArr.push(arr[i]);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> newArr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="reverse"><a href="#reverse" class="headerlink" title="reverse()"></a>reverse()</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">reverse();用于翻转数组，该方法会改变原来的数组，而不会创建新的数组。</div></pre></td></tr></table></figure>
<h2 id="sort"><a href="#sort" class="headerlink" title="sort()"></a>sort()</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sortNumber</span>(<span class="params">a,b</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="keyword">return</span> a - b;<span class="comment">//升序</span></div><div class="line"><span class="comment">//return b - a;//倒序 或者升序之后用 reverse() 翻转数组</span></div><div class="line">&#125;</div><div class="line">arr.sort(sortNumber);</div></pre></td></tr></table></figure>
<h2 id="找出元素-item-在给定数组-arr-中的位置"><a href="#找出元素-item-在给定数组-arr-中的位置" class="headerlink" title="找出元素 item 在给定数组 arr 中的位置"></a>找出元素 item 在给定数组 arr 中的位置</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">indexOf</span>(<span class="params">arr, item</span>) </span>&#123;</div><div class="line"><span class="keyword">return</span> arr.indexOf(item)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="计算给定数组-arr-中所有元素的总和"><a href="#计算给定数组-arr-中所有元素的总和" class="headerlink" title="计算给定数组 arr 中所有元素的总和"></a>计算给定数组 arr 中所有元素的总和</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">计算给定数组 arr 中所有元素的总和</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">arr</span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> hehe=<span class="number">0</span>;</div><div class="line"><span class="keyword">for</span>(e <span class="keyword">in</span> arr)&#123;</div><div class="line">hehe += arr[e];</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> hehe;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">arr</span>) </span>&#123;</div><div class="line"><span class="keyword">return</span> <span class="built_in">eval</span>(arr.join(<span class="string">'+'</span>));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="移除数组-arr-中的所有值与-item-相等的元素"><a href="#移除数组-arr-中的所有值与-item-相等的元素" class="headerlink" title="移除数组 arr 中的所有值与 item 相等的元素"></a>移除数组 arr 中的所有值与 item 相等的元素</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">移除数组 arr 中的所有值与 item 相等的元素。不要直接修改数组 arr，结果返回新的数组</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">remove</span>(<span class="params">arr, item</span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> arr2 =[];</div><div class="line"><span class="keyword">for</span>(e <span class="keyword">in</span> arr)&#123;</div><div class="line"><span class="keyword">if</span>(arr[e] != item)&#123;</div><div class="line">arr2.push(arr[e]);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> arr2;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">remove</span>(<span class="params">arr, item</span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> newArr = arr.slice(<span class="number">0</span>);</div><div class="line"><span class="keyword">while</span>(newArr.indexOf(item)!=<span class="number">-1</span>)&#123;</div><div class="line">newArr.splice(newArr.indexOf(item),<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> newArr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="在数组-arr-末尾添加元素-item"><a href="#在数组-arr-末尾添加元素-item" class="headerlink" title="在数组 arr 末尾添加元素 item"></a>在数组 arr 末尾添加元素 item</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">在数组 arr 末尾添加元素 item。不要直接修改数组 arr，结果返回新的数组</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params">arr, item</span>) </span>&#123;</div><div class="line"><span class="keyword">return</span> arr.concat([item]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params">arr, item</span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> newArr = arr.slice(<span class="number">0</span>);</div><div class="line"><span class="keyword">return</span> newArr.push(item);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="删除数组-arr-最后一个元素"><a href="#删除数组-arr-最后一个元素" class="headerlink" title="删除数组 arr 最后一个元素"></a>删除数组 arr 最后一个元素</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">删除数组 arr 最后一个元素。不要直接修改数组 arr，结果返回新的数组</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">truncate</span>(<span class="params">arr</span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> newArr = arr.slice(<span class="number">0</span>);</div><div class="line">newArr.pop();</div><div class="line"><span class="comment">//newArr.splice(newArr.length-1,1);</span></div><div class="line"><span class="comment">//newArr.splice(newArr.length-1);</span></div><div class="line"><span class="keyword">return</span> newArr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="在数组-arr-开头添加元素-item"><a href="#在数组-arr-开头添加元素-item" class="headerlink" title="在数组 arr 开头添加元素 item"></a>在数组 arr 开头添加元素 item</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">在数组 arr 开头添加元素 item。不要直接修改数组 arr，结果返回新的数组</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">prepend</span>(<span class="params">arr, item</span>) </span>&#123;</div><div class="line"><span class="keyword">return</span> [item].concat(arr);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">prepend</span>(<span class="params">arr, item</span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> newArr = arr.slice(<span class="number">0</span>);</div><div class="line">newArr.unshift(item);</div><div class="line"><span class="keyword">return</span> newArr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="删除数组-arr-第一个元素"><a href="#删除数组-arr-第一个元素" class="headerlink" title="删除数组 arr 第一个元素"></a>删除数组 arr 第一个元素</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">删除数组 arr 第一个元素。不要直接修改数组 arr，结果返回新的数组</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">curtail</span>(<span class="params">arr</span>) </span>&#123;</div><div class="line"><span class="keyword">return</span> arr.slice(<span class="number">1</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="合并数组-arr1-和数组-arr2"><a href="#合并数组-arr1-和数组-arr2" class="headerlink" title="合并数组 arr1 和数组 arr2"></a>合并数组 arr1 和数组 arr2</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">合并数组 arr1 和数组 arr2。不要直接修改数组 arr，结果返回新的数组</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">concat</span>(<span class="params">arr1, arr2</span>) </span>&#123;</div><div class="line"><span class="keyword">return</span> arr1.concat(arr2);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="在数组-arr-的-index-处添加元素-item"><a href="#在数组-arr-的-index-处添加元素-item" class="headerlink" title="在数组 arr 的 index 处添加元素 item"></a>在数组 arr 的 index 处添加元素 item</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">在数组 arr 的 index 处添加元素 item。不要直接修改数组 arr，结果返回新的数组</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">insert</span>(<span class="params">arr, item, index</span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> newArr = arr.slice(<span class="number">0</span>);</div><div class="line">newArr.splice(index,<span class="number">0</span>,item);</div><div class="line"><span class="keyword">return</span> newArr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="统计数组-arr-中值等于-item-的元素出现的次数"><a href="#统计数组-arr-中值等于-item-的元素出现的次数" class="headerlink" title="统计数组 arr 中值等于 item 的元素出现的次数"></a>统计数组 arr 中值等于 item 的元素出现的次数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">统计数组 arr 中值等于 item 的元素出现的次数</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">count</span>(<span class="params">arr, item</span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> c=<span class="number">0</span>;</div><div class="line"><span class="keyword">for</span>(e <span class="keyword">in</span> arr)&#123;</div><div class="line"><span class="keyword">if</span>(arr[e]==item)&#123;</div><div class="line">c++;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> c;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="生成m到n的区间随机数"><a href="#生成m到n的区间随机数" class="headerlink" title="生成m到n的区间随机数"></a>生成m到n的区间随机数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">生成m到n的区间随机数</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRand</span>(<span class="params">m, n</span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> random = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * (n - m + <span class="number">1</span>) + m);</div><div class="line"><span class="keyword">return</span> random;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="检查数组里是否包含了某值"><a href="#检查数组里是否包含了某值" class="headerlink" title="检查数组里是否包含了某值"></a>检查数组里是否包含了某值</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">检查数组里是否包含了某值</div><div class="line">arr.includes(item);<span class="comment">//结果返回true和false</span></div></pre></td></tr></table></figure>
<h2 id="编写一个javscript函数-fn"><a href="#编写一个javscript函数-fn" class="headerlink" title="编写一个javscript函数 fn"></a>编写一个javscript函数 fn</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">编写一个javscript函数 fn，该函数有一个参数 n(数字类型)，其返回值是一个数组，该数组内是 n 个随机且不重复的整数，且整数取值范围是 [<span class="number">2</span>, <span class="number">32</span>]。</div><div class="line"><span class="comment">//fn函数</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">n</span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> arr = [];</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</div><div class="line"><span class="keyword">var</span> rnd = getRand(<span class="number">2</span>, <span class="number">32</span>);</div><div class="line"><span class="keyword">if</span> (arr.includes(rnd)) &#123;</div><div class="line">i--;<span class="comment">//减一是因为如果第i次循环的时候如果数组有了改值，就重新走一遍</span></div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">arr.push(rnd);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> arr;</div><div class="line">&#125;</div><div class="line"><span class="comment">//生成区间随机数</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRand</span>(<span class="params">m, n</span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> random = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * (n - m + <span class="number">1</span>) + m);</div><div class="line"><span class="keyword">return</span> random;</div><div class="line">&#125;</div><div class="line"><span class="comment">//检查是否重复,这里直接用了 arr.includes(e)</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkInArr</span>(<span class="params">e,arr</span>)</span>&#123;</div><div class="line"><span class="keyword">if</span>(arr.indexOf(e)==<span class="number">-1</span>)&#123;</div><div class="line"><span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">//console.log(fn(5));</span></div></pre></td></tr></table></figure>
<h2 id="打乱一个数组"><a href="#打乱一个数组" class="headerlink" title="打乱一个数组"></a>打乱一个数组</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">randomArr.sort(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="keyword">return</span> <span class="built_in">Math</span>.random() &gt; <span class="number">0.5</span> ? <span class="number">-1</span> : <span class="number">1</span>; &#125;);</div></pre></td></tr></table></figure>
<h2 id="动态添加行"><a href="#动态添加行" class="headerlink" title="动态添加行"></a>动态添加行</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">AddRow</span>(<span class="params">json</span>) </span>&#123;</div><div class="line"><span class="comment">//json: [&#123;"OperatorNum":"8000011","TollT":1,"TollY":2,"TollS":3,"TollC":4,"ArrearageNum":5,"ArrearageToll":6,"AddNum":7,"AddToll":8&#125;,&#123;"OperatorNum":"总计","TollT":1,"TollY":2,"TollS":3,"TollC":4,"ArrearageNum":5,"ArrearageToll":6,"AddNum":7,"AddToll":8&#125;]</span></div><div class="line">$(<span class="string">'#tbody'</span>).html(<span class="string">''</span>);</div><div class="line"><span class="keyword">for</span> (key <span class="keyword">in</span> json) &#123;</div><div class="line"><span class="keyword">var</span> _tr = $(<span class="string">"&lt;tr&gt;&lt;/tr&gt;"</span>);</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> json[key]) &#123;</div><div class="line"><span class="keyword">var</span> _td = $(<span class="string">"&lt;td&gt;"</span> + json[key][k] + <span class="string">"&lt;/td&gt;"</span>);</div><div class="line">_tr.append(_td);</div><div class="line">&#125;</div><div class="line">$(<span class="string">'#tbody'</span>).append(_tr);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="a标签的一些用法"><a href="#a标签的一些用法" class="headerlink" title="a标签的一些用法"></a>a标签的一些用法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;a href=<span class="string">"javascript:void(alert('Warning!!!'))"</span>&gt;点我弹窗&lt;<span class="regexp">/a&gt;</span></div><div class="line"><span class="regexp">&lt;a href="javascript:void(0)"&gt;点我没效果&lt;/</span>a&gt;</div><div class="line">&lt;a href=<span class="string">"#pos"</span>&gt;点我定位到指定位置&lt;<span class="regexp">/a&gt;</span></div><div class="line"><span class="regexp">&lt;a href="#"&gt;点我定位到顶部&lt;/</span>a&gt;</div></pre></td></tr></table></figure>
<h2 id="计算给定数组-arr-中所有元素的总和-1"><a href="#计算给定数组-arr-中所有元素的总和-1" class="headerlink" title="计算给定数组 arr 中所有元素的总和"></a>计算给定数组 arr 中所有元素的总和</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//一般的方法</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">arr</span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> sum = <span class="number">0</span>;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i =<span class="number">0</span>;i&lt;arr.length;i++)&#123;</div><div class="line">sum = sum +arr[i];</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> sum;</div><div class="line">&#125;</div><div class="line"><span class="comment">//或者可以这样</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">arr</span>) </span>&#123;</div><div class="line"><span class="keyword">return</span> <span class="built_in">eval</span>(arr.join(<span class="string">"+"</span>))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="checkbox的一些用法"><a href="#checkbox的一些用法" class="headerlink" title="checkbox的一些用法"></a>checkbox的一些用法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"input[name='WeiZhi']"</span>);  <span class="comment">//选取name为xx的元素</span></div><div class="line">$(<span class="string">"input[type='checkbox']"</span>).prop(<span class="string">'checked'</span>,<span class="literal">true</span>);  <span class="comment">//设置checkbox选中</span></div><div class="line">$(<span class="string">"input[type='checkbox']"</span>).attr(<span class="string">'checked'</span>);  <span class="comment">//两种结果 "checked"和undefined，注意引号！</span></div><div class="line">$(<span class="string">"input[name='WeiZhi']:checked"</span>).length;  <span class="comment">// 选中的个数</span></div></pre></td></tr></table></figure>
<h2 id="小数转百分数"><a href="#小数转百分数" class="headerlink" title="小数转百分数"></a>小数转百分数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">toPercent</span>(<span class="params">point</span>) </span>&#123;</div><div class="line"><span class="keyword">return</span> <span class="built_in">Number</span>(point * <span class="number">100</span>).toFixed(<span class="number">2</span>) + <span class="string">"%"</span>;<span class="comment">//保留2位小数</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">.clearfix:after, &#123;</div><div class="line">content: <span class="string">"."</span>;</div><div class="line">display: block;</div><div class="line">height: <span class="number">0</span>;</div><div class="line">clear: both;</div><div class="line">visibility: hidden;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="获取事件源"><a href="#获取事件源" class="headerlink" title="获取事件源"></a>获取事件源</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</div><div class="line"><span class="keyword">var</span> event = event? event: <span class="built_in">window</span>.event;</div><div class="line"><span class="keyword">var</span> srcObj = ((event.srcElement)?event.srcElement:event.target);</div><div class="line">alert($(srcObj));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="阻止页面的表单元素自动联想填满"><a href="#阻止页面的表单元素自动联想填满" class="headerlink" title="阻止页面的表单元素自动联想填满"></a>阻止页面的表单元素自动联想填满</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;form id=<span class="string">"Content"</span> autocomplete=<span class="string">"off"</span>&gt;</div><div class="line">autocomplete=<span class="string">"off"</span>用来阻止浏览器自动填充（联想）</div></pre></td></tr></table></figure>
<h2 id="动态创建table"><a href="#动态创建table" class="headerlink" title="动态创建table"></a>动态创建table</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> json = <span class="built_in">eval</span>(msg);</div><div class="line"><span class="keyword">var</span> tab = <span class="string">""</span>;</div><div class="line"><span class="keyword">if</span> (json.length &gt; <span class="number">0</span>) &#123;</div><div class="line">$.each(json, <span class="function"><span class="keyword">function</span> (<span class="params">i, n</span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> num = i + <span class="number">1</span>;</div><div class="line">tab += <span class="string">"</span></div><div class="line"><span class="string">&lt;tr&gt;</span></div><div class="line"><span class="string">    &lt;td style='text-align:center;'&gt;"</span> + num + <span class="string">"&lt;/td&gt;</span></div><div class="line"><span class="string">    &lt;td&gt;"</span> + n.NianFen + <span class="string">"&lt;/td&gt;</span></div><div class="line"><span class="string">    &lt;td&gt;"</span> + n.YueFen + <span class="string">"&lt;/td&gt;</span></div><div class="line"><span class="string">    &lt;td&gt;"</span> + n.SFZName + <span class="string">"&lt;/td&gt;</span></div><div class="line"><span class="string">    &lt;td&gt;"</span> + n.DFNum + <span class="string">"&lt;/td&gt;</span></div><div class="line"><span class="string">    &lt;td&gt;"</span> + n.PJF + <span class="string">"&lt;/td&gt;</span></div><div class="line"><span class="string">    &lt;td&gt;"</span> + n.ZongFenShu + <span class="string">"&lt;/td&gt;</span></div><div class="line"><span class="string">    &lt;td&gt;"</span> + n.RenShu + <span class="string">"&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;/tr&gt;"</span>;</div><div class="line">&#125;)</div><div class="line">$(<span class="string">"#tbody"</span>).html(tab);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="查看的绑定"><a href="#查看的绑定" class="headerlink" title="查看的绑定"></a>查看的绑定</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> json = <span class="built_in">eval</span>(msg);</div><div class="line"><span class="keyword">if</span> (json.length &gt; <span class="number">0</span>) &#123;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> json[<span class="number">0</span>]) &#123;</div><div class="line">$(<span class="string">"#"</span> + key).text(json[<span class="number">0</span>][key]);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="让input只能输入正整数"><a href="#让input只能输入正整数" class="headerlink" title="让input只能输入正整数"></a>让input只能输入正整数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;input type=<span class="string">"text"</span> onkeyup=<span class="string">"this.value=this.value.replace(/\D/g,'')"</span></div><div class="line">注意：一般在JS中拼接的时候 符号 \  会被视为转义字符，最后页面显示的是.replace(<span class="regexp">/D/g</span>,<span class="string">''</span>)<span class="string">" 。 所以在JS拼接时可以这样：.replace(/\\D/g,'')"</span></div></pre></td></tr></table></figure>
<h2 id="自适应屏幕大小"><a href="#自适应屏幕大小" class="headerlink" title="自适应屏幕大小"></a>自适应屏幕大小</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.getElementById(<span class="string">'InforList'</span>).style.width = <span class="built_in">document</span>.body.clientWidth * <span class="number">0.90</span> + <span class="string">"px"</span>;</div><div class="line"><span class="built_in">document</span>.getElementById(<span class="string">'InforList'</span>).style.height = <span class="built_in">window</span>.innerHeight * <span class="number">0.75</span> + <span class="string">"px"</span>;</div></pre></td></tr></table></figure>
<h2 id="获取选中的下拉列表的value和text"><a href="#获取选中的下拉列表的value和text" class="headerlink" title="获取选中的下拉列表的value和text"></a>获取选中的下拉列表的value和text</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> index = $(<span class="string">'#HuoJia'</span>)[<span class="number">0</span>].selectedIndex; <span class="comment">// 选中索引</span></div><div class="line"><span class="keyword">var</span> HuoJia = $(<span class="string">'#HuoJia'</span>)[<span class="number">0</span>].options[index].text; <span class="comment">// 选中文本</span></div><div class="line">$(<span class="string">"#HuoJia"</span>).find(<span class="string">"option:selected"</span>).text() <span class="comment">//简洁</span></div></pre></td></tr></table></figure>
<h2 id="join-split-splice-substring的区别"><a href="#join-split-splice-substring的区别" class="headerlink" title="join, split, splice, substring的区别"></a>join, split, splice, substring的区别</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">join(<span class="string">','</span>)是将数组用逗号隔开，转化为字符串</div><div class="line">split(<span class="string">'-'</span>)是以字符串中的-符号转化为数组</div><div class="line">splice(<span class="number">3</span>,<span class="number">1</span>)是返回 从下标索引为<span class="number">3</span>的位置切割出长度为<span class="number">1</span>的字符</div><div class="line">str.substring(<span class="number">3</span>,<span class="number">5</span>)是截取两个指定下标位置的字符串，这个是下标为<span class="number">3</span>和<span class="number">5</span>的位置</div></pre></td></tr></table></figure>
<h2 id="选择器的权重"><a href="#选择器的权重" class="headerlink" title="选择器的权重"></a>选择器的权重</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">在写侧边栏点击变色的时候可以选择为li的点击事件加上addClass(<span class="string">'active'</span>)和removeClass(<span class="string">'active'</span>),但是在样式表里你不能直接写.active的样式</div><div class="line">注意看看之前有没有写过li的样式，比如你点击的这个li上级的<span class="class"><span class="keyword">class</span>为.<span class="title">side</span>，假如之前写过.<span class="title">side</span>&gt;<span class="title">li</span></span>&#123; background-color:red; &#125;的样式，点击虽然可以为li加上<span class="class"><span class="keyword">class</span>，但是</span></div><div class="line"><span class="class">.<span class="title">active</span></span>&#123; background-color:black; &#125;的样式不能体现，这时候这样写就行了.side&gt;.active&#123; background-color:black; &#125;，因为子元素选择器的权重比较高，会覆盖其他单独<span class="class"><span class="keyword">class</span>的样式</span></div></pre></td></tr></table></figure>
<h2 id="背景图片充满屏幕"><a href="#背景图片充满屏幕" class="headerlink" title="背景图片充满屏幕"></a>背景图片充满屏幕</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*背景图片充满屏幕的时候可以这样避免图片大小的因素*/</span></div><div class="line">&lt;div style=<span class="string">"position: absolute; width: 100%; height: 100%; z-index: -1"</span>&gt;</div><div class="line">    &lt;img id=<span class="string">"bgcolor"</span> style=<span class="string">"position: fixed;"</span> src=<span class="string">"~/Images/icon_login02.jpg"</span> width=<span class="string">"100%"</span>/&gt;</div><div class="line">&lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp">background: linear-gradient(#24a8e6, #44a9dc, #6bc5ec);/</span>*渐变色。注意是background,不是background-color*<span class="regexp">/</span></div></pre></td></tr></table></figure>
<h2 id="隐藏侧边导航的滚动条"><a href="#隐藏侧边导航的滚动条" class="headerlink" title="隐藏侧边导航的滚动条"></a>隐藏侧边导航的滚动条</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">::-webkit-scrollbar&#123;<span class="attr">width</span>:<span class="number">0</span>px;&#125; <span class="comment">/*隐藏侧边导航的滚动条，只支持webkit内核的浏览器*/</span></div></pre></td></tr></table></figure>
<h2 id="常用的返回上一页方法"><a href="#常用的返回上一页方法" class="headerlink" title="常用的返回上一页方法"></a>常用的返回上一页方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.location.href = <span class="string">"/XXX/XXX"</span>;</div><div class="line"><span class="built_in">window</span>.location.href = <span class="built_in">document</span>.referrer;</div><div class="line">history.back(<span class="number">-1</span>);</div><div class="line"><span class="built_in">window</span>.history.back();</div><div class="line">history.go(<span class="number">-1</span>);</div></pre></td></tr></table></figure>
<h2 id="回到顶部"><a href="#回到顶部" class="headerlink" title="回到顶部"></a>回到顶部</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> scrollt = <span class="built_in">document</span>.documentElement.scrollTop + <span class="built_in">document</span>.body.scrollTop;</div><div class="line"><span class="keyword">if</span> ( scrollt &gt; <span class="number">700</span> )&#123;</div><div class="line">$(<span class="string">".to-top"</span>).fadeIn(<span class="number">500</span>);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">$(<span class="string">".to-top"</span>).fadeOut(<span class="number">500</span>);</div><div class="line">&#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line">$(<span class="string">".to-top"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">$(<span class="string">"html,body"</span>).animate(&#123;<span class="attr">scrollTop</span>: <span class="number">0</span>&#125;, <span class="number">1000</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="防止用户选中文字"><a href="#防止用户选中文字" class="headerlink" title="防止用户选中文字"></a>防止用户选中文字</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">onselectstart：<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">-webkit-user-select:none;</div></pre></td></tr></table></figure>
<h2 id="阴影和背景渐变色"><a href="#阴影和背景渐变色" class="headerlink" title="阴影和背景渐变色"></a>阴影和背景渐变色</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">阴影：</div><div class="line">div&#123;box-shadow: 10px 10px 5px #888888;&#125;</div><div class="line">背景渐变色：</div><div class="line">background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(white), to(#cdcdcd));</div></pre></td></tr></table></figure>
<h2 id="悬浮放大"><a href="#悬浮放大" class="headerlink" title="悬浮放大"></a>悬浮放大</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">.newSongBody div img,.singerBody div img&#123;</div><div class="line">transition: transform <span class="number">0.7</span>s ;</div><div class="line">&#125;</div><div class="line">.newSongBody div:hover img,.singerBody div:hover img &#123;</div><div class="line">transform: scale(<span class="number">1.08</span>,<span class="number">1.08</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="超出div的部分省略号："><a href="#超出div的部分省略号：" class="headerlink" title="超出div的部分省略号："></a>超出div的部分省略号：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">.resourceDiv&#123;</div><div class="line">width:<span class="number">80</span>px;</div><div class="line">height:<span class="number">80</span>px;</div><div class="line">overflow:hidden;</div><div class="line">white-space:nowrap;</div><div class="line">text-overflow:ellipsis;</div><div class="line">display:block;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="enter键代替按钮点击"><a href="#enter键代替按钮点击" class="headerlink" title="enter键代替按钮点击"></a>enter键代替按钮点击</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.onkeydown = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> e = event || <span class="built_in">window</span>.event || <span class="built_in">arguments</span>.callee.caller.arguments[<span class="number">0</span>];</div><div class="line"><span class="keyword">if</span> (e &amp;&amp; e.keyCode == <span class="number">13</span>) &#123; <span class="comment">// enter 键</span></div><div class="line">Login();</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 汇总篇 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> css </tag>
            
            <tag> html </tag>
            
            <tag> javascript </tag>
            
            <tag> jquery </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在Mac下通过Hexo在Github上搭建博客（入门篇）]]></title>
      <url>/2017/10/20/hexoBlog/</url>
      <content type="html"><![CDATA[<p>Hexo 快速，简洁且高效的博客框架，让上百个页面在几秒内瞬间完成渲染。Hexo支持Github Flavored Markdown的所有功能，甚至可以整合Octopress的大多数插件，并自己也拥有强大的插件系统。</p>
<p><code>Hexo</code> <code>github</code> <code>Node.js</code> <code>Git</code> <code>markdown</code> <code>themes</code> <code>bash命令</code> <code>npm</code> <code>SSH</code></p>
<h2 id="什么是Hexo？"><a href="#什么是Hexo？" class="headerlink" title="什么是Hexo？"></a>什么是<a href="https://hexo.io/docs/index.html" target="_blank" rel="external">Hexo</a>？</h2><ul>
<li>Hexo 是一个快速、简洁且高效的博客框架。</li>
<li>Hexo 使用 <a href="https://baike.baidu.com/item/markdown" target="_blank" rel="external">Markdown</a>（或其他渲染引擎，之后会解释什么是Markdown）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</li>
</ul>
<h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><p><strong>安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：</strong></p>
<ul>
<li><a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a> （安装Recommended For Most Users那个版本）</li>
<li><a href="https://nodejs.org/en/" target="_blank" rel="external">Git</a></li>
</ul>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p><strong>当Node.js和Git都安装好后就可以正式安装Hexo了，终端执行如下命令：</strong><br>命令就是你的Launchpad里叫 <code>终端</code> 的app，相当于win的cmd<br>以下出现的$都不是命令的一部分</p>
<blockquote>
<p>$ npm install -g hexo-cli<br>全局安装 hexo 模块，</p>
<p>如果下面的操作报错则需要卸载 hexo：<br>$ npm uninstall hexo</p>
<p>再重新安装 hexo：<br>$ sudo npm install -g hexo<br>输入管理员密码（Mac登录密码）即开始安装</p>
</blockquote>
<h2 id="创建博客目录"><a href="#创建博客目录" class="headerlink" title="创建博客目录"></a>创建博客目录</h2><p><strong>初始化, 在指定目录中创建文件目录，以 blog 为例：</strong></p>
<blockquote>
<p>$ hexo init blog</p>
</blockquote>
<p><strong>blog是你建立的文件夹名称，cd到blog文件夹下，安装npm：</strong></p>
<blockquote>
<p>$ cd blog</p>
<p>$ npm install</p>
</blockquote>
<h2 id="创建一篇新文章"><a href="#创建一篇新文章" class="headerlink" title="创建一篇新文章"></a>创建一篇新文章</h2><p><strong>以创建博客 firstBlog为例，标题中包含空格需要用引号将标题引起来</strong></p>
<blockquote>
<p>$ hexo new firstBlog<br>执行该命令后在<code>source/_posts</code>目录下生成文件</p>
</blockquote>
<h2 id="生成博客页面"><a href="#生成博客页面" class="headerlink" title="生成博客页面"></a>生成博客页面</h2><blockquote>
<p>$ hexo generate<br>执行该命令后会生成<code>public</code>目录</p>
<p>$ hexo sever<br>执行命令后启动服务，访问<code>http://localhost:4000/</code>可查看博客</p>
</blockquote>
<p><strong>注意</strong>：</p>
<ul>
<li>之后每次修改完你的博客或者配置内容，都需要用$ hexo sever来开启hexo服务器预览</li>
<li>按 Ctrl+C 停止服务器，以便于进行其他操作</li>
</ul>
<h2 id="关联Github"><a href="#关联Github" class="headerlink" title="关联Github"></a>关联Github</h2><p>在进行这一步时你需要一个github账号，到 <a href="https://github.com/" target="_blank" rel="external">github官网</a> 用邮箱注册就行，名字尽量简短有意义，我的github地址：<a href="https://github.com/zc95" target="_blank" rel="external">https://github.com/zc95</a></p>
<p>创建仓库登录你的Github帐号，新建仓库，一定要是名为 <code>用户名.github.io</code> 的固定写法（如 <code>zc95.github.io</code> ），我的仓库地址：<a href="https://github.com/zc95/zc95.github.io" target="_blank" rel="external">https://github.com/zc95/zc95.github.io</a></p>
<h2 id="上传到-github"><a href="#上传到-github" class="headerlink" title="上传到 github"></a>上传到 github</h2><p><strong>首次使用配置：</strong></p>
<blockquote>
<p>$ npm install hexo-deplorer-git –save<br>安装 <code>hexo-deplorer-git</code></p>
</blockquote>
<p>打开新建的blog文件夹，找到 <code>_config.yml</code> 配置文件，用记事本打开，Ctrl+F来搜索deploy，type改为git，repository改为你自己的仓库地址，在配置博客站点的_config.yml文件时（包括theme主题站点中的_config.yml），在所有的冒号: 后边都要加一个空格，否则执行hexo命令会报错，切记 切记</p>
<blockquote>
<p>deploy:<br>type: git<br>repository: <code>你的仓库地址</code><br>branch: master</p>
</blockquote>
<p>ok，可以尽情装逼了。。。</p>
<blockquote>
<p>hexo g == hexo generate #生成页面文件</p>
<p>hexo s == hexo server #启动服务预览</p>
<p>hexo d == hexo deploy # 部署到GitHub</p>
</blockquote>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><blockquote>
<p>git clone #克隆主题时用到</p>
<p>cd blog #进入blog文件夹</p>
<p>hexo n “我的博客” == hexo new “我的博客” #新建文章</p>
<p>hexo clean  #清除缓存 网页正常情况下可以忽略此条命令  </p>
<p>hexo g == hexo generate #生成</p>
<p>hexo s == hexo server #启动服务预览</p>
<p>hexo d == hexo deploy # 部署</p>
<p>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d #你应该看得懂…</p>
</blockquote>
<h2 id="关于作者"><a href="#关于作者" class="headerlink" title="关于作者"></a>关于作者</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> author = &#123; </div><div class="line">  Name  : <span class="string">"张成"</span>,</div><div class="line">  Blog : <span class="string">"http://zc95.github.io"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 技术篇 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> github </tag>
            
            <tag> Node.js </tag>
            
            <tag> markdown </tag>
            
            <tag> npm </tag>
            
            <tag> 博客 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/10/19/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
